{"version":3,"sources":["logo.svg","components/Navbar.js","components/WelcomePage.js","TicTacToe/Square.js","TicTacToe/Board.js","TicTacToe/HelpModal.js","TicTacToe/SettingsModal.js","TicTacToe/Panel.js","TicTacToe/TicTacToeGame.js","FifteenGame/NumberCard.js","FifteenGame/Board.js","FifteenGame/HelpModal.js","FifteenGame/SettingsModal.js","FifteenGame/Panel.js","FifteenGame/FifteenGame.js","MagicSquares/MagicSquares.js","pages/StrategyPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","appBar","display","flexDirection","alignItems","height","width","margin","fontSize","title","color","flexGrow","marginLeft","fontWeight","menuListItem","icon","marginRight","marginTop","Navbar","props","classes","pageTitle","className","Typography","variant","noWrap","SimpleMenu","React","useState","anchorEl","setAnchorEl","handleClose","newPageTitle","onClick","event","currentTarget","aria-controls","aria-haspopup","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","component","RouterLink","to","Link","panel","heading","typography","pxToRem","fontWeightRegular","root","paper","backgroundColor","boxSizing","padding","header","body","WelcomePage","expanded","setExpanded","handleChange","isExpanded","Paper","ExpansionPanel","onChange","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","Grid","container","spacing","item","xs","secondaryHeading","square","justifyContent","iconX","iconO","win","lose","draw","Square","symbol","handleClick","console","error","elevation","board","flexWrap","alignContent","Board","handleSquareClick","boardSymbols","boardColors","newSquare","key","concat","button","lineHeight","buttonIcon","modal","palette","background","border","boxShadow","shadows","HowToPlayModal","setOpen","Button","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","switchBox","switchLabel","SettingsModal","showMoves","showCommentary","toggleShowMovesSwitch","toggleShowCommentarySwitch","showMovesSwitch","Fragment","Box","Switch","checked","name","inputProps","DialogContentText","showCommentarySwitch","Dialog","DialogTitle","DialogContent","DialogActions","infoArea","buttonArea","statusText","commentary","paddingRight","Panel","status","handleUndoButtonClick","handleNewGameButtonClick","undoButton","newGameButton","helpButton","settingsButton","boardArea","panelArea","TicTacToeGame","history","setHistory","setShowMoves","setShowCommentary","data","Array","fill","squaresClaimedByPlayer","forEach","squareId","getBoardSymbols","wins","highlightedSquares","gameOver","player","list","lineCountsFor","count","line","push","linesWithThree","squaresInLine","highlightWins","myTurn","log","hints","winningSquares","linesWithOnlyTwo","squareIsEmpty","immediateWins","winningSquare","urgentDefensiveMoves","keySquare","length","threatCreatingMoves","filter","index","indexOf","doubleAttackCreatingMoves","keyAttackingMove","getBoardHints","getBoardColors","squareClicked","blockedLines","ones","linesWithOnlyOne","detectDistantForcedWins","getCommentary","shortenedHistory","slice","empty","keySquares","other","lines","row","Math","floor","includes","lineId","squareIds","playerOne","playerTwo","NumberCard","num","handleCardClick","getStatus","newNumberCard","buttonBox","TextField","autoFocus","label","type","fullWidth","FifteenGame","numberClicked","MagicSquares","StrategyPage","window","screen","availHeight","availWidth","maxHeight","maxWidth","borderRadius","overflow","footer","footerText","paddingTop","App","useEffect","exact","path","Footer","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1d7ff689.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport {\r\n    Link as RouterLink,\r\n} from \"react-router-dom\";\r\n\r\n\r\n// My Components\r\n\r\n\r\n// MUI  components\r\nimport Link from '@material-ui/core/Link';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    // modal: {\r\n    //     display: 'flex',\r\n    //     alignItems: 'center',\r\n    //     justifyContent: 'center',\r\n    // },\r\n    // paper: {\r\n    //     backgroundColor: theme.palette.background.paper,\r\n    //     border: '2px solid #000',\r\n    //     boxShadow: theme.shadows[5],\r\n    //     padding: theme.spacing(2, 4, 3),\r\n    // },\r\n\r\n    appBar: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'end',\r\n        // backgroundColor: '#4AC9FD',\r\n        height: '5%',\r\n        width: '100%',\r\n        margin: '0',\r\n        fontSize: 'min(max(1rem, 4vmin), 30px)',\r\n\r\n    },\r\n    title: {\r\n        color: 'navy',\r\n        flexGrow: '1',\r\n        marginLeft: '1rem',\r\n        // fontSize: '3vmin',\r\n        fontSize: 'inherit',\r\n        fontWeight: 'bold'\r\n    },\r\n    menuListItem: {\r\n        fontSize: 'min(max(0.7rem, 3vmin), 24px)',\r\n    },\r\n    icon: {\r\n        color: 'navy',\r\n        fontSize: 'larger',\r\n        marginRight: '1.5vmin',\r\n        marginTop: '0.5vmin'\r\n    },\r\n}));\r\n\r\n\r\nexport default function Navbar(props) {\r\n    const classes = useStyles();\r\n    const pageTitle = props.pageTitle;\r\n\r\n    return (\r\n        <div className={classes.appBar} >\r\n            <Typography className={classes.title} variant=\"h6\" noWrap >\r\n                {pageTitle}\r\n            </Typography>\r\n\r\n            \r\n            <SimpleMenu />\r\n        </div>\r\n    );\r\n}\r\n\r\n// Adapted from MUI Docs\r\nfunction SimpleMenu(props) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    // const [pageTitle, setPageTitle] = React.useState(\"Welcome\");\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (newPageTitle) => {\r\n        // alert('closing menu');\r\n        // alert(`You clicked: ${newPageTitle}`);\r\n        // const newPageTitle = \r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MenuIcon \r\n                className={classes.icon}\r\n                onClick={handleClick}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n            />\r\n            \r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                // anchorOrigin={{\r\n                //     vertical: 'bottom',\r\n                //     horizontal: 'right',\r\n                // }}\r\n                // transformOrigin={{\r\n                //     vertical: 'top',\r\n                //     horizontal: 'right',\r\n                // }}\r\n            >\r\n                <MenuItem\r\n                    component={RouterLink}\r\n                    to='/'\r\n                    onClick={handleClose}\r\n                    className={classes.menuListItem}\r\n                >\r\n                    Home\r\n                </MenuItem>\r\n                <MenuItem\r\n                    component={RouterLink}\r\n                    to='/tic-tac-toe'\r\n                    onClick={handleClose}\r\n                    className={classes.menuListItem}\r\n                >\r\n                    Play Tic Tac Toe\r\n                </MenuItem>\r\n                <MenuItem\r\n                    component={RouterLink}\r\n                    to='/fifteen-game'\r\n                    onClick={handleClose}\r\n                    className={classes.menuListItem}\r\n                >\r\n                    Play the Fifteen Game\r\n                </MenuItem>\r\n                <MenuItem\r\n                    component={RouterLink}\r\n                    to='/magic-squares'\r\n                    onClick={handleClose}\r\n                    className={classes.menuListItem}\r\n                >\r\n                    Learn about Magic Squares\r\n                </MenuItem>\r\n                <MenuItem\r\n                    component={RouterLink}\r\n                    to='/strategy'\r\n                    onClick={handleClose}\r\n                    className={classes.menuListItem}\r\n                >\r\n                    Learn Tic Tac toe Strategy\r\n                </MenuItem>\r\n                <MenuItem\r\n                    component={Link}\r\n                    to='https://www.nolastemgarden.com'\r\n                    onClick={handleClose}\r\n                    className={classes.menuListItem}\r\n                >\r\n                    Nola Stem Garden Home\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n// My Components\r\n\r\n\r\n// MUI  components\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    panel: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    // root: {\r\n    //     width: '100%',\r\n    // },\r\n    // heading: {\r\n    //     fontSize: theme.typography.pxToRem(15),\r\n    //     flexBasis: '33.33%',\r\n    //     flexShrink: 0,\r\n    // },\r\n    // secondaryHeading: {\r\n    //     fontSize: theme.typography.pxToRem(15),\r\n    //     color: theme.palette.text.secondary,\r\n    // },\r\n\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        // backgroundColor: '#4AC9FD'\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'start',\r\n        backgroundColor: '#ffffff',\r\n        height: '50vmin',\r\n        width: 'calc(100% - 3vmin)',\r\n        boxSizing: 'border-box',\r\n        padding: '0vmin',\r\n    },\r\n    title: {\r\n        fontSize: '3.0vmin',\r\n    },\r\n    header: {\r\n        fontSize: '2.6vmin',\r\n        fontWeight: 'bold'\r\n    },\r\n    body: {\r\n        fontSize: '2vmin',\r\n    },\r\n\r\n}));\r\n\r\n\r\nexport default function WelcomePage() {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    \r\n    // What distinguishes Math from Science?\r\n    //    sci... Math...\r\n    //  Bottom Line: Proof vs evidence. \r\n    // What does Tic Tac Toe have to do with this?\r\n    // --play now button\r\n    // What is the Fifteen Game?\r\n    \r\n    return (\r\n        <div className={classes.root} >\r\n            <Paper className={classes.paper} >\r\n               \r\n                {/* What distinguishes Math from Science? */}\r\n               <ExpansionPanel \r\n                    className={classes.panel} \r\n                    expanded={expanded === 'panel1'} \r\n                    onChange={handleChange('panel1')}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                    >\r\n                        <Typography className={classes.title} >\r\n                            What distinguishes Math from Science?\r\n                        </Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={6}>\r\n                                <Typography className={classes.header} >\r\n                                    In Science:\r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    We start by observing the natural world and taking measurements. \r\n                                    We then use math to look for patterns in the data and we try to come \r\n                                    up with <em>theories</em> that explain what we observe and help us \r\n                                    predict nature.\r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    We use evidence to support our theories, but new tools for observing the world \r\n                                    can provide us with new evidence that forces dramatic changes in scientific theory.\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography className={classes.header} >\r\n                                    In Mathematics:\r\n                                </Typography>\r\n                                <Typography className={classes.body}>\r\n                                    We start with abstract ideas like number and shape and we look for things \r\n                                    that we can <em>prove must always be true</em> about them. \r\n                                    We try to see beneath-the-surface similarities between \r\n                                    parts of the real-world that seem unrelated at first.                                \r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    Mathematical proof relies on <em>pure logic, not evidence,</em> \r\n                                    so once a theorem is mathematically prooven there is no chance of \r\n                                    it later being disproven.\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography className={classes.body} >\r\n                                    <strong>Bottom Line:</strong> Proof is the heart of Mathematics.\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n\r\n\r\n                {/* What does Tic-Tac-Toe have to do with this? */}\r\n                <ExpansionPanel \r\n                    className={classes.panel} \r\n                    expanded={expanded === 'panel2'} \r\n                    onChange={handleChange('panel2')}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel2bh-content\"\r\n                        id=\"panel2bh-header\"\r\n                    >\r\n                        <Typography className={classes.title} >\r\n                            What does Tic-Tac-Toe have to do with this?\r\n                        </Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={8}>\r\n                                {/* <Typography className={classes.header} >\r\n                                    Tic-Tac-Toe has been \"solved\".\r\n                                </Typography> */}\r\n                                <Typography className={classes.body} >\r\n                                    Proof is one of the most important concepts in mathematics,\r\n                                    but it is often introduced in an uninspiring way and much later than it should be. \r\n                                    \r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    We require kids to <em>show their work</em> from an early age but only with enough\r\n                                    clarity for the teacher to understand. The more important skill is being able to \r\n                                    <em>explain your reasoning</em> in a way that can be understood by your peers.\r\n                                    \r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    Well-writtenProofs is one of the most important foundation concepts in all of mathematics.\r\n                                    Unfortunately, many math students of math don't write their first full proof\r\n                                    until they have reached univeristy. Most are introduced to proof as part of \r\n                                    a geometry class, in a unit that really is more about congruent triangles than\r\n                                    it is about proof. \r\n                                    \r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography className={classes.header} >\r\n                                     \r\n                             \r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography className={classes.body} >\r\n                                    <strong>Bottom Line:</strong> Proof is the heart of Mathematics.\r\n                            </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel> \r\n                    \r\n\r\n\r\n\r\n\r\n\r\n                <ExpansionPanel expanded={expanded === 'panel3'} onChange={handleChange('panel3')}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel3bh-content\"\r\n                        id=\"panel3bh-header\"\r\n                    >\r\n                        <Typography className={classes.heading}>Advanced settings</Typography>\r\n                        <Typography className={classes.secondaryHeading}>\r\n                            Filtering has been entirely disabled for whole web server\r\n                        </Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Typography>\r\n                            Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer sit amet egestas eros,\r\n                            vitae egestas augue. Duis vel est augue.\r\n                        </Typography>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n                <ExpansionPanel expanded={expanded === 'panel4'} onChange={handleChange('panel4')}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel4bh-content\"\r\n                        id=\"panel4bh-header\"\r\n                    >\r\n                        <Typography className={classes.heading}>Personal data</Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Typography>\r\n                            Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer sit amet egestas eros,\r\n                            vitae egestas augue. Duis vel est augue.\r\n                    </Typography>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// My Components\r\n\r\n// MUI  components\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n    square: {\r\n        margin: '2%',\r\n        width: '27%',\r\n        height: '27%',\r\n        boxSizing: 'border-box',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    iconX: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    iconO: {\r\n        width: '80%',\r\n        height: '80%',\r\n    },\r\n    win: {\r\n        backgroundColor: '#00DD00'\r\n        // backgroundColor: 'green'\r\n    },\r\n    lose: {\r\n        backgroundColor: '#ff6354'\r\n    },\r\n    draw: {\r\n        backgroundColor: '#f9ff52'\r\n        // backgroundColor: 'var(--logo-bg-color)'\r\n    }\r\n});\r\n\r\nexport default function Square(props) {\r\n    const classes = useStyles();\r\n    const id = props.id\r\n    const symbol = props.symbol\r\n    const color = props.color\r\n    const handleClick = props.handleClick\r\n\r\n\r\n    let icon;\r\n    switch (symbol) {\r\n        case 'x':\r\n            icon = <ClearIcon className={classes.iconX} />\r\n            break;\r\n        case 'o':\r\n            icon = <RadioButtonUncheckedIcon className={classes.iconO} />\r\n            break;\r\n        case '':\r\n            icon = null;\r\n            break;\r\n        default:\r\n            throw console.error(\"Square passed symbol not 'x' 'o' or ''\");\r\n            break;\r\n    }\r\n\r\n    let className;\r\n    switch (color) {\r\n        case 'win':\r\n            className = `${classes.square} ${classes.win} `\r\n            break;\r\n        case 'lose':\r\n            className = `${classes.square} ${classes.lose} `\r\n            break;\r\n        case 'draw':\r\n            className = `${classes.square} ${classes.draw} `\r\n            break;\r\n        default:\r\n            className = `${classes.square} `\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            elevation={4}\r\n            className={className}\r\n            onClick={() => handleClick(id)}\r\n        >\r\n            {icon}\r\n        </Paper>\r\n    )\r\n}","import React from 'react';\r\n\r\n// My Components\r\nimport Square from \"./Square\";\r\n\r\n// MUI  components\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    board: {\r\n        // border: 'solid blue 1px',\r\n        width: '76.4%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n\r\nexport default function Board(props) {\r\n    const classes = useStyles();\r\n    const handleSquareClick = props.handleSquareClick\r\n    const boardSymbols = props.boardSymbols;\r\n    const boardColors = props.boardColors;\r\n    \r\n    let board = [];\r\n    for (let id = 0; id < 9; id++) {\r\n        let newSquare =\r\n            <Square\r\n                key={id}\r\n                id={id}\r\n                symbol={boardSymbols[id]}\r\n                color={boardColors[id]}\r\n                handleClick={handleSquareClick}\r\n            />\r\n        ;\r\n        board = board.concat(newSquare);\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <div className={classes.board}>\r\n            {board}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// MUI Components\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    button: {\r\n        // border: 'solid red 1px',\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontSize: 'min(max(0.7rem, 3vmin), 24px)',\r\n        lineHeight: '0.8vmin',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: '1vmin',\r\n        fontSize: 'larger'\r\n        // fontSize: 'min(max(0.7rem, 3vmin), 22px)',\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    \r\n}));\r\n\r\nexport default function HowToPlayModal() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={handleOpen}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n            >\r\n                <HelpOutlineIcon className={classes.buttonIcon} />\r\n                Help\r\n            </Button>\r\n\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"transition-modal-title\">How To Play</h2>\r\n                        <ul id=\"transition-modal-description\" >\r\n                            <li>\r\n                                X and O take turns claiming one of the 9 squares on the board.\r\n                            </li>\r\n                            <li>\r\n                                The first player to claim all 3 squares in a single row, column, or diagonal.\r\n                            </li>\r\n                            <li>\r\n                                By default, you go first and play against my Bot, which will never fail to get a draw.\r\n                            </li>\r\n                            <li>\r\n                                In the Settings you can adjust whether you play as X or O and against the computer or not.\r\n                            </li>\r\n                            <li>\r\n                                You can also adjust whether to show/hide commentary and move hints.\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// MUI Icons\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    button: {\r\n        // border: 'solid red 1px',\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontSize: 'min(max(0.7rem, 3vmin), 24px)',\r\n        lineHeight: '0.8vmin',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: '1vmin',\r\n        fontSize: 'larger'\r\n        // fontSize: 'min(max(0.7rem, 3vmin), 22px)',\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    switchBox: {\r\n        // border: 'solid red 1px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n\r\n    },\r\n    switchLabel: {\r\n        fontSize: '2.2vmin',\r\n        width: '40%'\r\n\r\n    }\r\n}));\r\n\r\nexport default function SettingsModal(props) {\r\n    const classes = useStyles();\r\n    const showMoves = props.showMoves\r\n    const showCommentary = props.showCommentary\r\n    const toggleShowMovesSwitch = props.toggleShowMovesSwitch\r\n    const toggleShowCommentarySwitch = props.toggleShowCommentarySwitch\r\n\r\n    // Modal Open & Close \r\n    const [open, setOpen] = React.useState(false);\r\n    const openSettingsModal = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const showMovesSwitch = (\r\n        <React.Fragment>\r\n            <Box className={classes.switchBox}>\r\n                <Typography className={classes.switchLabel}>\r\n                    Show Moves\r\n                </Typography>\r\n                <Switch\r\n                    checked={showMoves}\r\n                    onChange={toggleShowMovesSwitch}\r\n                    color=\"primary\"\r\n                    name=\"checkedB\"\r\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                />\r\n            </Box>\r\n            <DialogContentText>\r\n                Show whether each possible move leads to a win, loss, or draw.\r\n            </DialogContentText>\r\n        </React.Fragment>\r\n    );\r\n\r\n    const showCommentarySwitch = (\r\n        <React.Fragment>\r\n            <Box className={classes.switchBox}>\r\n                <Typography className={classes.switchLabel}>\r\n                    Show Commentary\r\n            </Typography>\r\n                <Switch\r\n                    checked={showCommentary}\r\n                    onChange={toggleShowCommentarySwitch}\r\n                    color=\"primary\"\r\n                    name=\"checkedB\"\r\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                />\r\n            </Box>\r\n            <DialogContentText>\r\n                Show verbal hints about the position.\r\n            </DialogContentText>\r\n        </React.Fragment>\r\n        \r\n        \r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={openSettingsModal}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\" \r\n            >\r\n                <SettingsIcon className={classes.buttonIcon} />\r\n                Settings\r\n            </Button>\r\n            \r\n            \r\n            <Dialog \r\n                open={open} \r\n                onClose={handleClose} \r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    Settings\r\n                </DialogTitle>\r\n                \r\n                <DialogContent>\r\n                    \r\n                    {showCommentarySwitch}\r\n                    \r\n                    {showMovesSwitch}\r\n                    \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button \r\n                        onClick={handleClose} \r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                    >\r\n                        Apply\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// Custom Components\r\nimport HelpModal from \"./HelpModal\";\r\nimport SettingsModal from \"./SettingsModal\";\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n    panel: {\r\n        boxSizing: 'border-box',\r\n        marginTop: '3%',\r\n        width: '100%',\r\n        height: '94%',\r\n        padding: '3%',\r\n        \r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        \r\n    },\r\n    infoArea: {\r\n        \r\n    },\r\n    buttonArea: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        // border: 'solid red 1px',\r\n        width: '100%',\r\n        height: '18%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontSize: 'min(max(0.7rem, 3vmin), 24px)',\r\n        // lineHeight: '1vmin',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: '1vmin',\r\n        fontSize: 'larger'\r\n        // fontSize: 'min(max(0.7rem, 3vmin), 22px)',\r\n    },\r\n    switchLabel: {\r\n        lineHeight: '1rem'\r\n    },\r\n    statusText: {\r\n        fontSize: '5vmin',\r\n        fontWeight: 'bold'\r\n    },\r\n    commentary: {\r\n        fontSize: '2.2vmin',\r\n        paddingRight: '5vmin'\r\n    },\r\n}));\r\n\r\nexport default function Panel(props) {\r\n    const classes = useStyles();\r\n    const status = props.status;\r\n    const commentary = props.commentary;\r\n\r\n    \r\n    const showMoves = props.showMoves \r\n    const showCommentary = props.showCommentary \r\n    const handleUndoButtonClick = props.handleUndoButtonClick\r\n    const handleNewGameButtonClick = props.handleNewGameButtonClick\r\n    const toggleShowMovesSwitch = props.toggleShowMovesSwitch\r\n    const toggleShowCommentarySwitch = props.toggleShowCommentarySwitch\r\n    \r\n    const undoButton = (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => handleUndoButtonClick()}\r\n            \r\n        >\r\n            <UndoIcon className={classes.buttonIcon} />\r\n            Undo\r\n        </Button>\r\n\r\n        \r\n    );\r\n\r\n    const newGameButton = (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => handleNewGameButtonClick()} \r\n        >\r\n            <ReplayIcon className={classes.buttonIcon} />\r\n            New&nbsp;Game\r\n        </Button>\r\n    );\r\n\r\n    const helpButton = (\r\n        <div className={classes.button} >\r\n            <HelpModal />\r\n        </div>\r\n    );\r\n\r\n    const settingsButton = (\r\n        <div className={classes.button} >\r\n            <SettingsModal \r\n                showMoves={showMoves}\r\n                showCommentary={showCommentary}\r\n                toggleShowMovesSwitch={toggleShowMovesSwitch}\r\n                toggleShowCommentarySwitch={toggleShowCommentarySwitch}\r\n            />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Paper className={classes.panel}>\r\n            <Grid container>\r\n                <Grid item className={classes.infoArea} xs={8}>\r\n                    <Typography className={classes.statusText} noWrap >\r\n                        {status}\r\n                    </Typography>\r\n                    <Typography className={classes.commentary}  >\r\n                        {commentary}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item className={classes.buttonArea} xs={4}>\r\n                    {undoButton}\r\n                    {newGameButton}\r\n                    {helpButton}\r\n                    {settingsButton}\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            \r\n            \r\n                \r\n             \r\n        </Paper>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// My Components\r\nimport Board from \"./Board\";\r\nimport Panel from \"./Panel\";\r\n\r\n\r\n// MUI  components\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        // justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        // backgroundColor: '#4AC9FD'\r\n        \r\n    },\r\n    boardArea: {\r\n        backgroundColor: '#bbffff',\r\n        height: '60%',\r\n        width: '95%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    panelArea: {\r\n        // border: 'solid blue 1px',\r\n        // backgroundColor: '#4AC9FD',\r\n        boxSizing: 'border-box',\r\n        width: '95%',\r\n        height: '40%',\r\n        \r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n        \r\n    },\r\n}));\r\n\r\n\r\nexport default function TicTacToeGame() {\r\n    const classes = useStyles();\r\n\r\n    let [history, setHistory] = useState([]); \r\n    // let [showMoves, setShowMoves] = useState(false); \r\n    let [showMoves, setShowMoves] = useState(true); \r\n    // let [showCommentary, setShowCommentary] = useState(false);  \r\n    let [showCommentary, setShowCommentary] = useState(true);  \r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <div className={classes.boardArea} >\r\n                <Board \r\n                    boardSymbols={getBoardSymbols()} \r\n                    boardColors={getBoardColors()}\r\n                    handleSquareClick={handleSquareClick}\r\n                />\r\n            </div>\r\n            <div className={classes.panelArea}>\r\n                <Panel \r\n                    // data={getPanelData(history)} \r\n                    status={getStatus()}\r\n                    commentary={getCommentary()}\r\n                    showMoves={showMoves}\r\n                    showCommentary={showCommentary}\r\n                    handleUndoButtonClick={handleUndoButtonClick}\r\n                    handleNewGameButtonClick={handleNewGameButtonClick}\r\n                    toggleShowMovesSwitch={toggleShowMovesSwitch}\r\n                    toggleShowCommentarySwitch={toggleShowCommentarySwitch}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    // The <Game> holds all state and most helper and handler function definitions.\r\n    // It passes what it needs to to the board to render and to the panel.\r\n    \r\n    // The board data to render is a the latest entry in history.  We will have an 'undo' but not a 'redo' button\r\n    function getBoardSymbols() {\r\n        let data = Array(9).fill('');  // Start with an array representing a board of NINE empty squares\r\n        squaresClaimedByPlayer('x').forEach(squareId => {\r\n            data[squareId] = 'x';\r\n        });\r\n        squaresClaimedByPlayer('o').forEach(squareId => {\r\n            data[squareId] = 'o';\r\n        });\r\n        return data;\r\n    }\r\n\r\n    function getBoardColors() {\r\n        // If the game is won highlight the winning line(s), whether hints are turned on or off.\r\n        if (wins('x') || wins('o')) {\r\n            return highlightWins();\r\n        }\r\n        // If hints are turned off return colors [] filled with empty strings.\r\n        if (showMoves === false) {\r\n            return Array(9).fill('');\r\n        }\r\n        // If hints are turned on return colors [] filled with empty strings.\r\n        if (showMoves === true) {\r\n            return getBoardHints();\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    // TODO\r\n    function getBoardHints() {\r\n        const player = myTurn();\r\n        console.log(`Getting board hints for player: ${player}...`)\r\n        \r\n        // Start with an array representing a board of NINE squares which all lead to an undetermined outcome.\r\n        let hints = Array(9).fill('');  \r\n        \r\n        // PRIORITIES\r\n        // 1) complete a 3 in a line to win.\r\n        // 2) block opponent's 2 in a line.\r\n        // 3) create a double attack.\r\n        // ?) prevent opponent from creating a double attack.\r\n        // 5) make a forcing move that does not force opponent to create a double attack.\r\n        // Mark all claimed squares as 'claimed' (no hint) If a move is not diffinitively winning or losing or claimed after all checks have run then default it to White Back Ground \r\n\r\n        // (1)\r\n        // List the lines where I have 2 and the last square is empty. Mark these as winning.\r\n        immediateWins().forEach(winningSquare => {\r\n            hints[winningSquare] = 'win';\r\n        });\r\n        \r\n        // (2) Check if enemy has an unblocked 2 in a row and if so Block it from becoming 3.\r\n        // If there are multiple urgent defensive moves they both are Losing. If there is one it is set here to Draw but that may be over-written if the following call to doubleAttackCreatingMoves() finds that an urgent defensive move is simultanoeusly a winning attacking move.\r\n        urgentDefensiveMoves().forEach(keySquare => {\r\n            if (hints[keySquare] === '') {                     // ONLY modify a square to say \"draw\" or \"lose\" if it has not already been labeled \"win\"\r\n                if (urgentDefensiveMoves().length === 1) {\r\n                    hints[keySquare] = 'draw';  \r\n                }\r\n                if (urgentDefensiveMoves().length > 1) {\r\n                    hints[keySquare] = 'lose';\r\n                    return hints;\r\n                }\r\n            }\r\n        });\r\n        \r\n        // (3) This is third priority because a doubleAttack is only winning if there were NO urgentDefensiveMoves() or if there was One urgentDefensiveMoves() and it was the same square as found by doubleAttackCreatingMoves().\r\n        doubleAttackCreatingMoves().forEach(keyAttackingMove => {\r\n            if (urgentDefensiveMoves().length === 0 ) {\r\n                hints[keyAttackingMove] = 'win';\r\n            }\r\n            if (urgentDefensiveMoves().length === 1) {\r\n                const keyDefensiveMove = urgentDefensiveMoves()[0] \r\n                if (keyAttackingMove === keyDefensiveMove) {  // I believe an equivalent test would be to check if hints[keySquare] has already been set to 'draw' by the code block above that starts with a call to urgentDefensiveMoves().\r\n                    hints[keyAttackingMove] = 'win';\r\n                }\r\n            }\r\n            if (urgentDefensiveMoves().length > 1) {\r\n                // Then it doesn't matter if you can create a double attack or not, because your opponent already has their own double attack.\r\n                console.log(`doubleAttackCreatingMoves() found a double attack but it was irrelevant because opponent already had a double attack.`)\r\n                return hints;\r\n            }\r\n        });\r\n\r\n\r\n\r\n        return hints;\r\n    }\r\n\r\n\r\n    // MID-LEVEL HELPERS for getBoardColors()\r\n    function highlightWins() {\r\n        let highlightedSquares = Array(9).fill('')\r\n        if (!gameOver) {  // Assert: we only reach this point if either x or o has won.\r\n            console.error(`highlightWins() was called but found that the game is not over`);\r\n        }\r\n        let winner = (wins('x')) ? 'x' : 'o';\r\n        // let lines = lines(winner);\r\n        linesWithThree(winner).forEach(line => {\r\n            squaresInLine(line).forEach(square => {\r\n                highlightedSquares[square] = 'win';\r\n            });\r\n        });\r\n        return highlightedSquares;\r\n    } \r\n    \r\n    // MID-LEVEL HELPERS for getBoardHints()\r\n    function immediateWins(){\r\n        let winningSquares = [];\r\n        const player = myTurn();\r\n        linesWithOnlyTwo(player).forEach((line) => {\r\n            squaresInLine(line).forEach((square) => {\r\n                if (squareIsEmpty(square)) {\r\n                    winningSquares.push(square);\r\n                    // hints[square] = 'win'; This code used to be part of a bloated getBoardHints() method and at that time it had responsibility for actually assigning colors in the hints array that the method finally returned.\r\n                }\r\n            })\r\n        })\r\n        return winningSquares;\r\n    }\r\n\r\n    function urgentDefensiveMoves(player = myTurn()) {\r\n        let keySquares = [];\r\n        linesWithOnlyTwo(other(player)).forEach((line) => {\r\n            squaresInLine(line).forEach((square) => {\r\n                if (squareIsEmpty(square)) {\r\n                    keySquares.push(square);\r\n                }\r\n            })\r\n        })\r\n        return keySquares;\r\n    }\r\n\r\n    function doubleAttackCreatingMoves() {\r\n        return threatCreatingMoves().filter((square, index) => threatCreatingMoves().indexOf(square) !== index );\r\n    }\r\n\r\n    function threatCreatingMoves(player = myTurn()) {\r\n        // if (player === undefined){\r\n        //     player = myTurn();\r\n        // }\r\n        const threatCreatingMoves = []; // A squareId that appears here once creates a two-in-a-line threat.  A squareId that appears here twice creates two separate two-in-a-line threats.\r\n        linesWithOnlyOne(player).forEach((line) => {\r\n            squaresInLine(line).forEach((square) => {\r\n                if (squareIsEmpty(square)){                 // Don't add an already claimed square to the list of therat creating moves!\r\n                    threatCreatingMoves.push(square);\r\n                }\r\n            })\r\n        })\r\n        console.log(`threatCreatingMoves() found the following empty squares make threats: ${threatCreatingMoves}`)\r\n        return threatCreatingMoves;\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    \r\n    // HIGH-LEVEL PANEL HELPERS no params\r\n\r\n    function getStatus() {\r\n        if (wins('x')) {\r\n            return (`X wins!`)\r\n        }\r\n        else if (wins('o')) {\r\n            return (`O wins!`)\r\n        }\r\n        else if (gameDrawn()) {\r\n            return (`Draw.`)\r\n        }\r\n        else if (history.length % 2 === 0) {\r\n            return (`X's turn.`)\r\n        }\r\n        else if (history.length % 2 === 1) {\r\n            return (`O's turn.`)\r\n        }\r\n        else {\r\n            console.error(\"A call to getStatus() did not work!\");\r\n            return\r\n        }\r\n    }\r\n    function getCommentary() {\r\n        console.log(`getCommentary() called while showCommentary = ${showCommentary}`)\r\n        if (gameOver()) {\r\n            return `Game Over`\r\n        }\r\n        if (!showCommentary) {\r\n            return `Coach's commentary would appear here if turned on in the settings.`\r\n        }\r\n\r\n        // If no moves have been made\r\n        if (history.length === 0) {\r\n            return `X goes first. It may look like there are 9 different options but \r\n            when you consider symmetry there are really only 3: Center, Edge, or Corner.`\r\n        }\r\n\r\n        // If one move has been made\r\n        if (history.length === 1 && history[0] === 4) {\r\n            return `X went in the center. O has two options. One is good and lets O\r\n            force a draw. The other is bad and gives X a chance to win.`\r\n        }\r\n        if (history.length === 1 && history[0] !== 4 && history[0] % 2 === 0 ) {\r\n            return `X went in the corner. O has five non-symmetrical options. Only \r\n            one of them prevents X from being able to force a win.`\r\n        }\r\n        if (history.length === 1 && history[0] !== 4 && history[0] % 2 === 1) {\r\n            return `X went on the edge. O has five non-symmetrical options. __ are\r\n            good and let O force a draw. The other __ are mistakes that give X a \r\n            chance to win.`\r\n        }\r\n\r\n        // If two moves has been made\r\n        if (history.length === 2) {\r\n            const player = myTurn();\r\n            const ones = linesWithOnlyOne(player).length\r\n            \r\n            return `Each player has gone once and now X has ${ones} lines with a 1-0 advantage. Look for a forcing move that will set you up to make a double attack next turn!`\r\n        }\r\n\r\n        // If three moves have been made\r\n        if (history.length === 3 && detectDistantForcedWins()) {\r\n            return `O's first move was a mistake and now X has set up a forced win in two moves!`\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function detectDistantForcedWins() {\r\n        const player = myTurn();\r\n        // At this stage O has at most 1 urgentDefensiveMove\r\n        // If that move creates a threat then see if X blocking that threat makes a doubleAttack\r\n        // If that move does not create a threat then see if X has any move makes a doubleAttack\r\n        if (urgentDefensiveMoves(player).length === 1) {\r\n            \r\n            // CURRENTLY BROKEN B/C it does not check if o's defensive move creates a threat\r\n            return true;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n    // CLICK HANDLERS\r\n    function handleSquareClick(squareClicked) {\r\n        if (gameOver()) {\r\n            console.log(\"return without effects from handleSquareClick(). The Game is already over.\")\r\n            return;\r\n        }\r\n        if (!squareIsEmpty(squareClicked)) {\r\n            console.log(\"return without effects from handleSquareClick(). That square has already been claimed.\")\r\n            return;\r\n        }\r\n        // If we reach this point the clicked square is open and the game is not over yet ... \r\n        console.log(`History: ${history.concat(squareClicked)}`)\r\n        \r\n        setHistory(history.concat(squareClicked));\r\n        // This function does not pass along any of its results, it acts thru side-effects. It calls setHistory and use of that hook tells React it needs to re-render all components that depend on the state \"history\".\r\n    }\r\n    function handleUndoButtonClick() {\r\n        const shortenedHistory = history.slice(0, history.length - 1)\r\n        console.log(`handleUndoButtonClick() removed ${history[history.length - 1]} . New Shortened history: ${shortenedHistory}`);\r\n        setHistory(shortenedHistory);\r\n    }\r\n    function handleNewGameButtonClick() {\r\n        const empty = [];\r\n        console.log(`History reset to: ${empty}`);\r\n        setHistory(empty);\r\n    }\r\n    function toggleShowMovesSwitch() {\r\n        setShowMoves(!showMoves)\r\n    }\r\n    function toggleShowCommentarySwitch() {\r\n        setShowCommentary(!showCommentary)\r\n    }\r\n    \r\n    \r\n    // TURN HELPERS\r\n    // High-Level Methods that need to know whose turn it is can deduce that info by using these helpers to look at the history directly, rather than having to be invoked with a player param. \r\n    function myTurn() {\r\n        return (history.length % 2 === 0) ? 'x' : 'o' ;\r\n    }\r\n    function notMyTurn() {\r\n        return (history.length % 2 === 0) ? 'o' : 'x';\r\n    }\r\n    function other(player) {\r\n        if (player !== 'o' && player !== 'x') { console.error(`other(player) called with invalid player: ${player}`)}\r\n        return (player === 'o') ? 'x' : 'o';\r\n    }\r\n\r\n\r\n    // LOW-LEVEL HELPERS\r\n    // need to be told which player you care about b/c they may be used on EITHER the player whose turn it is or the other player.\r\n    function squaresClaimedByPlayer(player) {\r\n        if (player === 'x') {\r\n            return history.filter((squareId, index) => index % 2 === 0);\r\n        }\r\n        else if (player === 'o') {\r\n            return history.filter((squareId, index) => index % 2 === 1);\r\n        }\r\n        else {\r\n            console.error(`Method squaresClaimedByPlayer() called with invalid player: ${player}`)\r\n            return undefined;\r\n        }\r\n    }\r\n    function lineCountsFor(player) {\r\n        // Based on the history state, return an array of 8 ints 0-3 indicating the number of X's or O's in each row, col, and diagonal\r\n        let lines = Array(8).fill(0);\r\n\r\n        squaresClaimedByPlayer(player).forEach(square => {\r\n            // Update Row\r\n            const row = Math.floor(square / 3)    // number 0, 1, or 2\r\n            lines[row]++;\r\n\r\n            // Update Col\r\n            const col = (square % 3)            // number 0, 1, or 2  +3 to account for the three indexes set asside for rows\r\n            lines[col + 3]++;\r\n\r\n            // UpSlash ?\r\n            if (square === 2 || square === 4 || square === 6) {\r\n                lines[6]++\r\n            }\r\n\r\n            // DownSlash ?\r\n            if (square === 0 || square === 4 || square === 8) {\r\n                lines[7]++\r\n            }\r\n        });\r\n        // console.log(`Status: ${status}`)\r\n        return lines;\r\n    }\r\n\r\n    function wins(player) {\r\n        return (lineCountsFor(player).includes(3));\r\n    }\r\n    function linesWithThree(player) {\r\n        let list = [];\r\n        // console.log(`lineCountsFor : ${lineCountsFor(player)}`)\r\n        lineCountsFor(player).forEach((count, line) => {\r\n            if (count === 3) {\r\n                list.push(line)\r\n            }\r\n        })\r\n        // console.log(`linesWithThree() called for player '${player}'. List: ${list}`)\r\n        return list;\r\n    }\r\n    function linesWithOnlyTwo(player) {\r\n        let list = [];\r\n        lineCountsFor(player).forEach((count, line) => {\r\n            if (count === 2 && lineCountsFor(other(player))[line] === 0 ) {  \r\n                list.push(line)\r\n            }\r\n        })\r\n        console.log(`List Unblocked Twos for player '${player}': ${list}`)\r\n        return list;\r\n    }\r\n    function linesWithOnlyOne(player) {\r\n        let list = [];\r\n        lineCountsFor(player).forEach((count, line) => {\r\n            if (count === 1 && lineCountsFor(other(player))[line] === 0) {\r\n                list.push(line)\r\n            }\r\n        })\r\n        console.log(`List Unblocked Ones for player '${player}': ${list}`)\r\n        return list;\r\n    }\r\n    function emptyLines() {\r\n        let list = [];\r\n        lineCountsFor('x').forEach((count, line) => {\r\n            if (count === 0 && lineCountsFor('o')[line] === 0) {\r\n                list.push(line)\r\n            }\r\n        })\r\n        console.log(`List Empty Lines: ${list}`)\r\n        return list;\r\n    }\r\n    function blockedLines() {\r\n        let list = [];\r\n        lineCountsFor('x').forEach((count, line) => {\r\n            if (count > 0 && lineCountsFor('o')[line] > 0) {\r\n                list.push(line)\r\n            }\r\n        })\r\n        console.log(`List Empty Lines: ${list}`)\r\n        return list;\r\n    }\r\n    function allLines() {\r\n        // Top Row, Middle Row, Bottom Row, \r\n        // Left Column, Middle Column, Right Column,\r\n        // Upslash Diagonal, Downslash Diagonal\r\n        return [0, 1, 2, 3, 4, 5, 6, 7]\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n\r\n    \r\n    \r\n    \r\n    \r\n\r\n    // list the squareIds that fall in a given lineId\r\n    function squaresInLine(lineId) {\r\n        console.log(`getSquares() was called with lineId: ${lineId}`)\r\n        let squareIds;\r\n        switch (lineId) {\r\n            case 0:\r\n                squareIds = [0, 1, 2];\r\n                break;\r\n            case 1:\r\n                squareIds = [3, 4, 5];\r\n                break;\r\n            case 2:\r\n                squareIds = [6, 7, 8];\r\n                break;\r\n            case 3:\r\n                squareIds = [0, 3, 6];\r\n                break;\r\n            case 4:\r\n                squareIds = [1, 4, 7];\r\n                break;\r\n            case 5:\r\n                squareIds = [2, 5, 8];\r\n                break;\r\n            case 6:\r\n                squareIds = [2, 4, 6];\r\n                break;\r\n            case 7:\r\n                squareIds = [0, 4, 8];\r\n                break;\r\n            default:\r\n                console.error(`getSquares() was called with an invalid lineId.`)\r\n        }\r\n        return squareIds;\r\n        \r\n    }\r\n    \r\n    \r\n    // BOOLEAN helpers for getStatus() and handleSquareClick()\r\n    function squareIsEmpty(square) {\r\n        return (!history.includes(square))\r\n    }\r\n    \r\n\r\n    \r\n    // function gameDrawn() {\r\n    //     return (history.length >= 9 && !wins('x') && !wins('o'));  // Board full and neither player has a win\r\n    // }\r\n    function gameDrawn() {\r\n        return (blockedLines().length >= 8 && !wins('x') && !wins('o'));  // Board full and neither player has a win\r\n    }\r\n    \r\n    \r\n    \r\n    function gameOver() {\r\n        return (history.length >= 9 || wins('x') || wins('o'));  // Board full or there's a 3-in-a-row\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\n\r\n// My Components\r\n\r\n// MUI  components\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n    square: {\r\n        margin: '1vmin',\r\n        width: '13vmin',\r\n        height: '13vmin',\r\n        boxSizing: 'border-box',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontSize: '10vmin',\r\n        fontWeight: 'bold',\r\n    },\r\n    playerOne: {\r\n        backgroundColor: '#3f51b5',\r\n        color: 'white',\r\n        \r\n    },\r\n    playerTwo: {\r\n        backgroundColor: '#4AC9FD',\r\n        \r\n    },\r\n    \r\n});\r\n\r\nexport default function NumberCard(props) {\r\n    const classes = useStyles();\r\n    const status = props.status\r\n    console.log(`NumCard called with status = ${status}`)\r\n    \r\n    const num = props.num\r\n    // function handleSquareClick(id) = props.handleSquareClick\r\n\r\n    let className;\r\n    switch (status) {\r\n        case 'red':\r\n            className = `${classes.square} ${classes.playerOne} `\r\n            break;\r\n        case 'yellow':\r\n            className = `${classes.square} ${classes.playerTwo} `\r\n            break;\r\n        case 'available':\r\n            className = `${classes.square} `\r\n            break;\r\n        default:\r\n            throw console.error(\"number card passed invalid status\");\r\n    }\r\n    //className={`${classes.square} ${classes.red} `}\r\n    return (\r\n        <Paper\r\n            className={className}\r\n            onClick={() => props.handleClick(num)}\r\n        >\r\n            {num}\r\n        </Paper>\r\n        \r\n    )\r\n}","import React from 'react';\r\n\r\n// My Components\r\nimport NumberCard from \"./NumberCard\";\r\n\r\n// MUI  components\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n    board: {\r\n        width: '50vmin',\r\n        height: '50vmin',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n\r\n// .circle - container {\r\n//     position: relative;\r\n//     width: 24em;\r\n//     height: 24em;\r\n//     padding: 2.8em;\r\n//     /*2.8em = 2em*1.4 (2em = half the width of a link with img, 1.4 = sqrt(2))*/\r\n//     border: dashed 1px;\r\n//     border - radius: 50 %;\r\n//     margin: 1.75em auto 0;\r\n// }\r\n    // .circle - container a {\r\n    // display: block;\r\n    // position: absolute;\r\n    // top: 50 %; left: 50 %;\r\n    // width: 4em; height: 4em;\r\n    // margin: -2em;\r\n// }\r\n    // .circle - container img { display: block; width: 100 %; }\r\n    // .deg0 { transform: translate(12em); } /* 12em = half the width of the wrapper */\r\n    // .deg45 { transform: rotate(45deg) translate(12em) rotate(-45deg); }\r\n    // .deg135 { transform: rotate(135deg) translate(12em) rotate(-135deg); }\r\n    // .deg180 { transform: translate(-12em); }\r\n    // .deg225 { transform: rotate(225deg) translate(12em) rotate(-225deg); }\r\n    // .deg315 { transform: rotate(315deg) translate(12em) rotate(-315deg); }\r\n\r\nexport default function Board(props) {\r\n    const classes = useStyles();\r\n    \r\n    const history = props.history;\r\n    console.log(`Board recieved history: ${history}`)\r\n    const handleCardClick = props.handleCardClick;\r\n    \r\n    // Is a given number card claimed? If so by who?\r\n    function getStatus(num){\r\n        // console.log(`Get Status called on Num: ${num}`)\r\n        \r\n        const key = history.indexOf(num);\r\n        console.log(`Key: ${key}`)\r\n        if (key === -1){\r\n            return 'available';\r\n        }\r\n        else if (key % 2 === 0) {\r\n            return 'red';\r\n        }\r\n        else if (key % 2 === 1) {\r\n            return 'yellow';\r\n        }\r\n        else {\r\n            console.error(`getStatus(num) is returning undefined`)\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    \r\n    let board = [];\r\n    for (let num = 1; num <= 9; num++) {\r\n        let newNumberCard =\r\n            <NumberCard\r\n                key={num}\r\n                num={num}\r\n                status={getStatus(num)} \r\n                handleClick={handleCardClick}\r\n            />\r\n        ;\r\n        board = board.concat(newNumberCard);\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <div className={classes.board}>\r\n            {board}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// MUI Components\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    button: {\r\n        // border: 'solid red 1px',\r\n        width: '100%',\r\n        height: '100%',\r\n        fontSize: '0.8rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: '0.6rem'\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    \r\n}));\r\n\r\nexport default function HowToPlayModal() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={handleOpen}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n            >\r\n                <HelpOutlineIcon className={classes.buttonIcon} /> \r\n                Help\r\n            </Button>\r\n\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"transition-modal-title\">How To Play</h2>\r\n                        <ul id=\"transition-modal-description\" >\r\n                            <li>\r\n                                Two players take turns claiming one of the 9 numbers.\r\n                            </li>\r\n                            <li>\r\n                                To win a player must collect a set of 3 numbers that add up to exactly 15.\r\n                            </li>\r\n                            <li>\r\n                                By default, you go first and play against my Bot, which will never fail to get a draw.\r\n                            </li>\r\n                            <li>\r\n                                In the Settings you can adjust whether you go first or second.\r\n                            </li>\r\n                            <li>\r\n                                You can also adjust whether to show/hide commentary and move hints.\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// MUI Icons\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    button: {\r\n        // border: 'solid red 1px',\r\n        width: '100%',\r\n        height: '100%',\r\n        fontSize: '0.8rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: '0.6rem'\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n\r\n    switchLabel: {\r\n        lineHeight: '1rem'\r\n    },\r\n\r\n}));\r\n\r\nexport default function SettingsModal(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const openSettingsModal = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const showMovesSwitch = (\r\n        <Box className={classes.buttonBox}>\r\n            <Typography className={classes.switchLabel}>\r\n                Show Moves\r\n            </Typography>\r\n            <Switch\r\n                checked={props.showMoves}\r\n                onChange={props.toggleShowMovesSwitch}\r\n                color=\"primary\"\r\n                name=\"checkedB\"\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n        </Box>\r\n    );\r\n\r\n    const showCommentarySwitch = (\r\n        <Switch\r\n            checked={props.showCommentary}\r\n            onChange={props.toggleShowCommentarySwitch}\r\n            color=\"primary\"\r\n            name=\"checkedB\"\r\n            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={openSettingsModal}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n            >\r\n                <SettingsIcon \r\n                    className={classes.buttonIcon}\r\n                />\r\n                Settings\r\n            </Button>\r\n            \r\n            \r\n            <Dialog \r\n                open={open} \r\n                onClose={handleClose} \r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    Settings\r\n                </DialogTitle>\r\n                \r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                            To subscribe to this website, please enter your email address here. We will send updates\r\n                            occasionally.\r\n                    </DialogContentText>\r\n                    {showMovesSwitch}\r\n                    {showCommentarySwitch}\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button \r\n                        onClick={handleClose} \r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                    >\r\n                        Apply\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// Custom Components\r\nimport HelpModal from \"./HelpModal\";\r\nimport SettingsModal from \"./SettingsModal\";\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n\r\n\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    panel: {\r\n        boxSizing: 'border-box',\r\n        margin: '3vmin',\r\n        width: '68vmin',\r\n        height: '28vmin',\r\n        padding: '2vmin',\r\n        \r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        \r\n\r\n    },\r\n    infoArea: {\r\n        border: 'solid red 1px',\r\n        width: '70%',\r\n        fontSize: '2rem',\r\n        \r\n    },\r\n    buttonArea: {\r\n        // border: 'solid red 1px',\r\n        width: '30%',\r\n        display: 'flex',\r\n        flexDirection: 'column', \r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        padding: '1rem',\r\n    },\r\n    button: {\r\n        // border: 'solid red 1px',\r\n        width: '100%',\r\n        height: '20%',\r\n        fontSize: '0.8rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: '0.6rem'\r\n    },\r\n    \r\n    status: {\r\n        fontSize: '2.4rem',\r\n        fontWeight: 'bold'\r\n    },\r\n    commentary: {\r\n        fontSize: '1.2rem',\r\n    },\r\n}));\r\n\r\nexport default function Panel(props) {\r\n    const classes = useStyles();\r\n\r\n    \r\n    let status = props.status;\r\n    \r\n    const undoButton = (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => props.handleUndoButtonClick()}\r\n        >\r\n            <UndoIcon className={classes.buttonIcon} />\r\n            Undo\r\n        </Button>\r\n    );\r\n    const newGameButton = (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => props.handleNewGameButtonClick()}\r\n        >\r\n            New Game\r\n        </Button>\r\n\r\n\r\n    );\r\n    \r\n    const helpButton = (\r\n        <div className={classes.button} >\r\n            <HelpModal />\r\n        </div>\r\n            \r\n        \r\n    );\r\n\r\n    \r\n    const settingsButton = (\r\n        <div className={classes.button} >\r\n            <SettingsModal />\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <Paper className={classes.panel}>\r\n            <Box className={classes.infoArea}> \r\n                <Typography className={classes.status} noWrap >\r\n                    {status}\r\n                </Typography>\r\n                <Typography className={classes.commentary}  >\r\n                    Commentary would show up here if turned on.\r\n                </Typography>\r\n                \r\n                \r\n            </Box>\r\n            \r\n            \r\n            <Box className={classes.buttonArea}>\r\n                \r\n                {undoButton}\r\n                \r\n                {newGameButton}\r\n\r\n                {helpButton}\r\n                \r\n                {settingsButton}\r\n\r\n                {/* {showMovesSwitch} */}\r\n                \r\n                {/* {showCommentarySwitch} */}\r\n            </Box>\r\n                \r\n             \r\n        </Paper>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// My Components\r\nimport Board from \"./Board\";\r\nimport Panel from \"./Panel\";\r\n\r\n\r\n// MUI  components\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        // backgroundColor: '#4AC9FD'\r\n    },\r\n    boardArea: {\r\n        backgroundColor: '#bbffff',\r\n        height: '50vmin',\r\n        width: 'calc(100% - 3vmin)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    panelArea: {\r\n        // border: 'solid blue 1px',\r\n        // backgroundColor: '#4AC9FD',\r\n        boxSizing: 'border-box',\r\n        width: '100%',\r\n        height: '32vmin',\r\n\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n}));\r\n\r\n\r\nexport default function FifteenGame() {\r\n    const classes = useStyles();\r\n\r\n    let [history, setHistory] = useState(Array());\r\n    // let [showMoves, setShowMoves] = useState(false);\r\n    // let [showCommentary, setShowCommentary] = useState(false);\r\n\r\n    console.log(`FifteenGame has history as: ${history}`)\r\n    \r\n    return (\r\n        <div className={classes.root} >\r\n            <div className={classes.boardArea} >\r\n                <Board\r\n                    history={history}\r\n                    handleCardClick={handleCardClick}\r\n\r\n                />\r\n            </div>\r\n            <div className={classes.panelArea}>\r\n                <Panel\r\n                    // data={getPanelData(history)} \r\n                    // status={getStatus()}\r\n                    // showMoves={showMoves}\r\n                    // showCommentary={showCommentary}\r\n                    // handleUndoButtonClick={handleUndoButtonClick}\r\n                    // toggleShowMovesSwitch={toggleShowMovesSwitch}\r\n                    // toggleShowCommentarySwitch={toggleShowCommentarySwitch}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n    // The board data to render is a the latest entry in history.  We will have an 'undo' but not a 'redo' button\r\n    function getBoardValues() {\r\n        // Start with an array representing a board of NINE empty squares\r\n        let data = Array(9).fill('');\r\n        // For each move in the history ...\r\n        for (let i = 0; i < history.length; i++) {\r\n            // If it was X's turn set the index in data indicated here by history\r\n            if (i % 2 === 0) {\r\n                data.splice(history[i], 1, 'x')\r\n            }\r\n            // If it was O's turn set the index in data indicated here by history\r\n            else if (i % 2 === 1) {\r\n                data.splice(history[i], 1, 'o')\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n\r\n    // function handleUndoButtonClick() {\r\n    //     const shortenedHistory = history.slice(0, history.length - 1)\r\n    //     console.log(`${history[history.length - 1]} removed. Shortened history: ${shortenedHistory}`);\r\n    //     setHistory(shortenedHistory);\r\n    // }\r\n    // function toggleShowMovesSwitch() {\r\n    //     setShowMoves(!showMoves)\r\n    // }\r\n    // function toggleShowCommentarySwitch() {\r\n    //     setShowCommentary(!showCommentary)\r\n    // }\r\n\r\n\r\n    function handleCardClick(numberClicked) {\r\n        if (gameOver()) {\r\n            console.log(\"return without effects from handleCardClick(). The Game is already over.\")\r\n            return;\r\n        }\r\n        if (history.indexOf(numberClicked) !== -1) {\r\n            console.log(\"return without effects from handleCardClick(). That number has already been claimed.\")\r\n            return;\r\n        }\r\n        // If we reach this point the clicked square is open and the game is not over yet ... \r\n        setHistory(history.concat(numberClicked));\r\n        // This function does not pass along any of its results, it acts thru side-effects. It calls setHistory and use of that hook tells React it needs to re-render all components that depend on the state \"history\".\r\n    }\r\n\r\n\r\n    // Based on the history state, return an array of 8 ints 0-3 indicating the number of X's or O's in each row, col, and diagonal\r\n    // function xLines() {\r\n    //     const xLines = getLines(history.filter((squareId, index) => index % 2 === 0));\r\n    //     console.log(`Number of X in each line: ${xLines}`)\r\n    //     return xLines;\r\n    // }\r\n    // function oLines() {\r\n    //     const oLines = getLines(history.filter((squareId, index) => index % 2 === 1));\r\n    //     console.log(`Number of O in each line: ${oLines}`)\r\n    //     return oLines;\r\n    // }\r\n    // function getLines(claimedSquares) {\r\n    //     let status = Array(8).fill(0);\r\n    //     // For each square this player has claimed make 2, 3, or 4 updates\r\n    //     for (let i = 0; i < claimedSquares.length; i++) {\r\n    //         const squareId = claimedSquares[i];\r\n\r\n    //         // Update Row\r\n    //         const row = Math.floor(squareId / 3)    // number 0, 1, or 2\r\n    //         status[row]++;\r\n\r\n    //         // Update Col\r\n    //         const col = (squareId % 3)            // number 0, 1, or 2  +3 to account for the three indexes set asside for rows\r\n    //         status[col + 3]++;\r\n\r\n    //         // UpSlash ?\r\n    //         if (squareId === 2 || squareId === 4 || squareId === 6) {\r\n    //             status[6]++\r\n    //         }\r\n\r\n    //         // DownSlash ?\r\n    //         if (squareId === 0 || squareId === 4 || squareId === 8) {\r\n    //             status[7]++\r\n    //         }\r\n    //     }\r\n    //     // console.log(`Status: ${status}`)\r\n    //     return status;\r\n    // }\r\n\r\n\r\n    // BOOLEAN helpers for getStatus() and handleSquareClick()\r\n    // function xWins() {\r\n    //     return (xLines().includes(3));\r\n    // }\r\n    // function oWins() {\r\n    //     return (oLines().includes(3));\r\n    // }\r\n    // function gameDrawn() {\r\n    //     return (history.length >= 9 && !xWins() && !oWins());  // Board full and neither player has a win\r\n    // }\r\n    function gameOver() {\r\n        return false;\r\n        // return (history.length >= 9 || xWins() || oWins());  // Board full or there's a 3-in-a-row\r\n    }\r\n\r\n\r\n    // function getStatus() {\r\n    //     if (xWins()) {\r\n    //         const winningLine = getLines(history.filter((squareId, index) => index % 2 === 0)).indexOf(3);\r\n    //         return (`X wins on line ${winningLine}`)\r\n    //     }\r\n    //     else if (oWins()) {\r\n    //         return (`O wins!`)\r\n    //     }\r\n    //     else if (gameDrawn()) {\r\n    //         return (`Draw.`)\r\n    //     }\r\n    //     else if (history.length % 2 === 0) {\r\n    //         return (`X to move.`)\r\n    //     }\r\n    //     else if (history.length % 2 === 1) {\r\n    //         return (`O to move.`)\r\n    //     }\r\n    //     else {\r\n    //         console.error(\"getStatus() is broken!\");\r\n    //         return\r\n    //     }\r\n    // }\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\n// My Components\r\n\r\n\r\n// MUI  components\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n\r\n})\r\n\r\n\r\nexport default function MagicSquares() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            The Magic Squares Page\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// My Components\r\n\r\n\r\n// MUI  components\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n\r\n})\r\n\r\n\r\nexport default function StrategyPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            The Strategy Page\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Link as RouterLink,\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\n\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\n// My Components & Pages\r\nimport Navbar from './components/Navbar';\r\nimport WelcomePage from \"./components/WelcomePage\";\r\nimport TicTacToeGame from './TicTacToe/TicTacToeGame';\r\nimport FifteenGame from './FifteenGame/FifteenGame';\r\nimport MagicSquares from \"./MagicSquares/MagicSquares\";\r\nimport StrategyPage from \"./pages/StrategyPage\";\r\n\r\n// MUI  components\r\n// import Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\n// import Button from '@material-ui/core/Button';\r\n// import Menu from '@material-ui/core/Menu';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nlet availHeight = window.screen.availHeight;\r\nlet availWidth = window.screen.availWidth;\r\n\r\n// let containerHeight;\r\n// let containerWidth;\r\n\r\n// if (availHeight * 3 / 4 < availWidth) {\r\n//     containerHeight = '100vh';\r\n//     containerWidth = '75vh';\r\n// } else if (availHeight * 3 / 4 > availWidth) {\r\n//     console.log(`orientation === \"portrait\"`);\r\n//     containerWidth = availWidth;\r\n//     containerHeight = availWidth * 4 / 3;\r\n// } else {\r\n//     console.log(\"The availHeight and availWidth API isn't supported in this browser :(\");\r\n// }\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: '100vh',\r\n        width: '100vw',\r\n        // boxSizing: 'border-box',\r\n        backgroundColor: '#ccFFFF',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n\r\n    },\r\n    container: {\r\n        backgroundColor: '#4AC9FD',\r\n        height: 'min(133vw, 100vh)',\r\n        maxHeight: '1200px',\r\n        width: 'min(75vh, 100vw)',\r\n        maxWidth: '900px',\r\n        // height: containerHeight,\r\n        // width: containerWidth,\r\n        borderRadius: '2vmin',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    footer: {\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n        height: '5%',\r\n        width: '100%',\r\n        alignItems: 'bottom',\r\n    },\r\n    footerText: {\r\n        paddingTop: '0.7vmin',\r\n        paddingRight: '2.5vmin',\r\n        color: 'navy',\r\n        fontSize: '1.6vmin'\r\n    },\r\n    // title: {\r\n    //     flexGrow: '1',\r\n    //     marginLeft: '1rem',\r\n    // },\r\n    \r\n    \r\n})\r\n\r\n\r\nexport default function App() {\r\n    const classes = useStyles();\r\n    // const [pageTitle, setPageTitle] = React.useState(\"Welcome\");\r\n    \r\n    const [pageTitle, setPageTitle] = React.useState(\"Welcome\");\r\n  \r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    React.useEffect(() => {\r\n        // Update the document title using the browser API\r\n        // document.title = `You clicked ${count} times`;\r\n\r\n    });\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <div className={classes.container} >\r\n                <Router>\r\n                        <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Navbar pageTitle={\"Welcome\"} />\r\n                            <WelcomePage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/tic-tac-toe\">\r\n                            <Navbar pageTitle={\"Play Tic Tac Toe\"} />\r\n                            <TicTacToeGame />\r\n                        </Route>\r\n\r\n                        <Route path=\"/fifteen-game\">\r\n                            <Navbar pageTitle={\"Play the Fifteen Game\"} />\r\n                            <FifteenGame />\r\n                        </Route>\r\n\r\n                        <Route path=\"/magic-squares\">\r\n                            <Navbar pageTitle={\"Learn about Magic Squares\"} />\r\n                            <MagicSquares />\r\n                        </Route>\r\n\r\n                        <Route path=\"/strategy\">\r\n                            <Navbar pageTitle={\"Learn Tic Tac Toe Strategy\"} />\r\n                            <StrategyPage />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Footer() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box className={classes.footer} >\r\n            <Typography className={classes.footerText} noWrap >\r\n                Produced by the Nola Stem Garden\r\n            </Typography>\r\n        </Box>\r\n    );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n//   <React.StrictMode>\r\n    <App />,\r\n//   </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}