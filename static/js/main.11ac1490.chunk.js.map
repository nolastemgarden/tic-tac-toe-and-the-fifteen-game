{"version":3,"sources":["logo.svg","components/Navbar.js","components/WelcomePage.js","TicTacToe/Square.js","TicTacToe/Board.js","TicTacToe/HelpModal.js","TicTacToe/SettingsModal.js","TicTacToe/Panel.js","TicTacToe/TicTacToeGame.js","FifteenGame/NumberCard.js","FifteenGame/Board.js","FifteenGame/HelpModal.js","FifteenGame/SettingsModal.js","FifteenGame/Panel.js","FifteenGame/FifteenGame.js","MagicSquares/MagicSquares.js","pages/StrategyPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","appBar","display","flexDirection","alignItems","height","width","margin","fontSize","title","color","flexGrow","marginLeft","fontWeight","menuListItem","icon","marginRight","marginTop","Navbar","props","classes","pageTitle","className","Typography","variant","noWrap","SimpleMenu","React","useState","anchorEl","setAnchorEl","handleClose","newPageTitle","onClick","event","currentTarget","aria-controls","aria-haspopup","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","component","RouterLink","to","Link","panel","heading","typography","pxToRem","fontWeightRegular","root","paper","backgroundColor","boxSizing","padding","header","body","paddingTop","WelcomePage","expanded","setExpanded","handleChange","isExpanded","Paper","ExpansionPanel","onChange","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","Grid","container","spacing","item","xs","square","justifyContent","iconX","iconO","immediateWin","doubleAttackCreatingMove","forcedWinCreatingMove","urgentDefensiveMove","unavoidableDefeat","gameLosingMove","Square","symbol","handleClick","console","error","elevation","board","flexWrap","alignContent","Board","handleSquareClick","boardSymbols","boardColors","newSquare","key","concat","button","lineHeight","buttonIcon","modal","palette","background","border","boxShadow","shadows","HowToPlayModal","setOpen","Button","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","switchBox","switchLabel","SettingsModal","showMoves","showCommentary","toggleShowMovesSwitch","toggleShowCommentarySwitch","showMovesSwitch","Fragment","Box","Switch","checked","name","inputProps","DialogContentText","showCommentarySwitch","Dialog","DialogTitle","DialogContent","DialogActions","infoArea","buttonArea","statusText","commentary","paddingRight","Panel","status","handleUndoButtonClick","handleNewGameButtonClick","undoButton","newGameButton","helpButton","settingsButton","boardArea","panelArea","TicTacToeGame","history","setHistory","setShowMoves","setShowCommentary","data","Array","fill","squaresClaimedByPlayer","forEach","squareId","getBoardSymbols","wins","highlightedSquares","gameOver","player","moveList","linesList","lineCountsFor","count","line","push","linesWithThree","squaresInLine","highlightWins","log","getBoardHints","getBoardColors","squareClicked","squareIsEmpty","blockedLines","length","myTurn","ones","linesWithOnlyOne","forcedWinCreatingMoves","getCommentary","shortenedHistory","slice","empty","hints","immediateWins","winningSquare","urgentDefensiveMoves","keySquare","keyDefensiveMove","doubleAttackCreatingMoves","includes","keyAttackingMove","thereIsAForcedWin","gameLosingMoves","mistakeMove","thereIsAnImmediateWin","winningSquares","linesWithOnlyTwo","thereIsAnUrgentDefensiveMove","urgentDefensiveMovesList","other","threatCreatingMoves","singleAttackCreatingMoves","filter","index","indexOf","thereIsAWinningDoubleAttack","winningDoubleAttackCreatingMoves","winningDoubleAttacksList","forcedWinCreatingMovesList","threatCreatingMove","hypotheticalHistory","forcedDefensiveMove","move","emptySquares","lines","row","Math","floor","emptySquaresList","i","lineId","squareIds","playerOne","playerTwo","NumberCard","num","handleCardClick","getStatus","newNumberCard","buttonBox","TextField","autoFocus","label","type","fullWidth","FifteenGame","numberClicked","MagicSquares","StrategyPage","window","screen","availHeight","availWidth","maxHeight","maxWidth","borderRadius","overflow","footer","footerText","App","useEffect","exact","path","Footer","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.11ac1490.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport {\r\n    Link as RouterLink,\r\n} from \"react-router-dom\";\r\n\r\n\r\n// My Components\r\n\r\n\r\n// MUI  components\r\nimport Link from '@material-ui/core/Link';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    // modal: {\r\n    //     display: 'flex',\r\n    //     alignItems: 'center',\r\n    //     justifyContent: 'center',\r\n    // },\r\n    // paper: {\r\n    //     backgroundColor: theme.palette.background.paper,\r\n    //     border: '2px solid #000',\r\n    //     boxShadow: theme.shadows[5],\r\n    //     padding: theme.spacing(2, 4, 3),\r\n    // },\r\n\r\n    appBar: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'end',\r\n        // backgroundColor: '#4AC9FD',\r\n        height: '5%',\r\n        width: '100%',\r\n        margin: '0',\r\n        fontSize: 'min(max(1rem, 4vmin), 30px)',\r\n\r\n    },\r\n    title: {\r\n        color: 'navy',\r\n        flexGrow: '1',\r\n        marginLeft: '1rem',\r\n        // fontSize: '3vmin',\r\n        fontSize: 'inherit',\r\n        fontWeight: 'bold'\r\n    },\r\n    menuListItem: {\r\n        fontSize: 'min(max(0.7rem, 3vmin), 24px)',\r\n    },\r\n    icon: {\r\n        color: 'navy',\r\n        fontSize: 'larger',\r\n        marginRight: '1.5vmin',\r\n        marginTop: '0.5vmin'\r\n    },\r\n}));\r\n\r\n\r\nexport default function Navbar(props) {\r\n    const classes = useStyles();\r\n    const pageTitle = props.pageTitle;\r\n\r\n    return (\r\n        <div className={classes.appBar} >\r\n            <Typography className={classes.title} variant=\"h6\" noWrap >\r\n                {pageTitle}\r\n            </Typography>\r\n\r\n            \r\n            <SimpleMenu />\r\n        </div>\r\n    );\r\n}\r\n\r\n// Adapted from MUI Docs\r\nfunction SimpleMenu(props) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    // const [pageTitle, setPageTitle] = React.useState(\"Welcome\");\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (newPageTitle) => {\r\n        // alert('closing menu');\r\n        // alert(`You clicked: ${newPageTitle}`);\r\n        // const newPageTitle = \r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <MenuIcon \r\n                className={classes.icon}\r\n                onClick={handleClick}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n            />\r\n            \r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n                // anchorOrigin={{\r\n                //     vertical: 'bottom',\r\n                //     horizontal: 'right',\r\n                // }}\r\n                // transformOrigin={{\r\n                //     vertical: 'top',\r\n                //     horizontal: 'right',\r\n                // }}\r\n            >\r\n                <MenuItem\r\n                    component={RouterLink}\r\n                    to='/'\r\n                    onClick={handleClose}\r\n                    className={classes.menuListItem}\r\n                >\r\n                    Home\r\n                </MenuItem>\r\n                <MenuItem\r\n                    component={RouterLink}\r\n                    to='/tic-tac-toe'\r\n                    onClick={handleClose}\r\n                    className={classes.menuListItem}\r\n                >\r\n                    Play Tic Tac Toe\r\n                </MenuItem>\r\n                <MenuItem\r\n                    component={RouterLink}\r\n                    to='/fifteen-game'\r\n                    onClick={handleClose}\r\n                    className={classes.menuListItem}\r\n                >\r\n                    Play the Fifteen Game\r\n                </MenuItem>\r\n                <MenuItem\r\n                    component={RouterLink}\r\n                    to='/magic-squares'\r\n                    onClick={handleClose}\r\n                    className={classes.menuListItem}\r\n                >\r\n                    Learn about Magic Squares\r\n                </MenuItem>\r\n                <MenuItem\r\n                    component={RouterLink}\r\n                    to='/strategy'\r\n                    onClick={handleClose}\r\n                    className={classes.menuListItem}\r\n                >\r\n                    Learn Tic Tac toe Strategy\r\n                </MenuItem>\r\n                <MenuItem\r\n                    component={Link}\r\n                    to='https://www.nolastemgarden.com'\r\n                    onClick={handleClose}\r\n                    className={classes.menuListItem}\r\n                >\r\n                    Nola Stem Garden Home\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n// My Components\r\n\r\n\r\n// MUI  components\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    panel: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    // root: {\r\n    //     width: '100%',\r\n    // },\r\n    // heading: {\r\n    //     fontSize: theme.typography.pxToRem(15),\r\n    //     flexBasis: '33.33%',\r\n    //     flexShrink: 0,\r\n    // },\r\n    // secondaryHeading: {\r\n    //     fontSize: theme.typography.pxToRem(15),\r\n    //     color: theme.palette.text.secondary,\r\n    // },\r\n\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        // backgroundColor: '#4AC9FD',\r\n        // overflow: 'scroll',\r\n    },\r\n    paper: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'start',\r\n        backgroundColor: '#ffffff',\r\n        height: '50vmin',\r\n        width: 'calc(100% - 3vmin)',\r\n        boxSizing: 'border-box',\r\n        padding: '0vmin',\r\n        // overflow: 'scroll',\r\n    },\r\n    title: {\r\n        fontSize: '3.0vmin',\r\n    },\r\n    header: {\r\n        fontSize: '2.6vmin',\r\n        fontWeight: 'bold'\r\n    },\r\n    body: {\r\n        fontSize: '2vmin',\r\n        paddingTop: '1rem',\r\n    },\r\n\r\n}));\r\n\r\n\r\nexport default function WelcomePage() {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleChange = (panel) => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n\r\n    \r\n    // What distinguishes Math from Science?\r\n    //    sci... Math...\r\n    //  Bottom Line: Proof vs evidence. \r\n    // What does Tic Tac Toe have to do with this?\r\n    // --play now button\r\n    // What is the Fifteen Game?\r\n    \r\n    return (\r\n        <div className={classes.root} >\r\n            <Paper className={classes.paper} >\r\n               \r\n                {/* What distinguishes Math from Science? */}\r\n               <ExpansionPanel \r\n                    className={classes.panel} \r\n                    expanded={expanded === 'panel1'} \r\n                    onChange={handleChange('panel1')}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1bh-content\"\r\n                        id=\"panel1bh-header\"\r\n                    >\r\n                        <Typography className={classes.title} >\r\n                            What distinguishes Math from Science?\r\n                        </Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={6}>\r\n                                <Typography className={classes.header} >\r\n                                    In Science:\r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    We start by observing the natural world, counting things and taking measurements. \r\n                                    Then, we (use math to) look for patterns in the data. We imagine possible explanations\r\n                                    for what we we observe and call these <em>theories</em>.\r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    We look for evidence to both support and to disproove our theories, but new tools \r\n                                    for observing the world occasionally provide us with new evidence that forces \r\n                                    dramatic changes in scientific theory.\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography className={classes.header} >\r\n                                    In Mathematics:\r\n                                </Typography>\r\n                                <Typography className={classes.body}>\r\n                                    We start with abstract ideas like number and shape and we look for things \r\n                                    that we can <em>prove must always be true</em> about them. \r\n                                    We try to see beneath-the-surface similarities between \r\n                                    parts of the real-world that seem unrelated at first.                                \r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    Mathematical proof relies on <em>pure logic, not evidence,</em> \r\n                                    so once a theorem is mathematically prooven there is no chance of \r\n                                    it later being disproven.\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography className={classes.body} >\r\n                                    <strong>Bottom Line:</strong> Proof is the heart of Mathematics. <br />\r\n                                    It relies on reason only, not supporting evidence.\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n\r\n\r\n\r\n                {/* Why does being proof-based increase the value of Math? */}\r\n                <ExpansionPanel\r\n                    className={classes.panel}\r\n                    expanded={expanded === 'panel3'}\r\n                    onChange={handleChange('panel3')}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel3bh-content\"\r\n                        id=\"panel3bh-header\"\r\n                    >\r\n                        <Typography className={classes.title} >\r\n                            How is Proof introduced in school?\r\n                        </Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12}>\r\n                                <Typography className={classes.header} >\r\n                                    \"No Credit if you don't Show Your Work!!!\"\r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    The first stage of learning math is based around memorization of basic arithmetic facts.\r\n                                    Once a student has mastery of the basic facts, they move on to applying those facts in \r\n                                    multi-step computational processes such as long-division. At this point they are required to show in \r\n                                    writing how they arrived at answers that presumably could not have been \"just seen\".\r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    \"Show your work\" generally means \"include your scratch work so I know you didn't just copy the final \r\n                                    answers from a classmate.\"\r\n                                    Using this requirement as an anti-cheating mechanism totally misses the point and gives young kids the wrong\r\n                                    idea about what math is all about. \r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    The computational skills that students learn as they go through a K-12 math curriculum can\r\n                                    be put to many great uses. Still, the most important skill we should aim for students \r\n                                    to take away from their math class experience isn't a computational skill at all.  \r\n                                    What's most important is that kids learn to explain thier reasoning in a way that is thorough,\r\n                                    clear, and that can be understood by their peers.\r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    Math is a human endeavor, based on human communication. Mathematical ideas only\r\n                                    have value if we can share them with other people. Too often, school sends the message that \r\n                                    you only need to show your work with just enough clarity for your teacher be able to read it.\r\n                                    There is no real-world value in that. If you are a student who wants to learn a skill with real-world\r\n                                    value and you feel like you aren't getting that from your current math class, start by raising your hand more!\r\n                                    Don't just ask questions to get answers, ask questions because through practice you will get better at asking questions,\r\n                                    and when you get better at asking questions the world is a more interesting place to live. \r\n                                    Really good questions sometimes have more to teach us more than the answers do. \r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel>\r\n\r\n\r\n\r\n                {/* What does Tic-Tac-Toe have to do with this? */}\r\n                <ExpansionPanel \r\n                    className={classes.panel} \r\n                    expanded={expanded === 'panel4'} \r\n                    onChange={handleChange('panel4')}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel4bh-content\"\r\n                        id=\"panel4bh-header\"\r\n                    >\r\n                        <Typography className={classes.title} >\r\n                            What does Tic-Tac-Toe have to do with this?\r\n                        </Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12}>\r\n                                <Typography className={classes.header} >\r\n                                    I will never lose at Tic Tac Toe, and I can Proove it.\r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    This is a fun challenge and something that I have used with many in-person math classes.\r\n                                    After facing off against many student-challengers (who had the option to go first or second) \r\n                                    the chalk board will be full of games I drew and won. But that doesn't proove anything!\r\n                                    No matter how many examples games we play, it will never be a proof that there isn't a \r\n                                    strategy that we have overlooked.  To proove that I will never lose I have to Organize my\r\n                                    exploration of the possible strategies. \r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    Well-written proofs always start by giving precice defininitions of the key terms that are\r\n                                    used in them.  I model that practice for students by writing on teh board the definition of the term \"mistake\".\r\n                                    It is helpful that this is a familiar word with an every day meaning that we are borrowing and fine-tuning\r\n                                    for our current purpose rather than introducing a totally new idea. Though we are going to use the word to mean \r\n                                    something very close to its every-day usage, since we are trying to formally proove that the best outcome either \r\n                                    player in in a game of Tic Tac Toe can guarantee is a Draw\r\n                                    \r\n                                </Typography>\r\n                            </Grid>\r\n                            \r\n                            \r\n                        </Grid>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel> \r\n                    \r\n\r\n\r\n                {/* What is the Fifteen Game? */}\r\n                <ExpansionPanel \r\n                    className={classes.panel} \r\n                    expanded={expanded === 'panel6'} \r\n                    onChange={handleChange('panel6')}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel6bh-content\"\r\n                        id=\"panel6bh-header\"\r\n                    >\r\n                        <Typography className={classes.title} >\r\n                            What is the Fifteen Game?\r\n                        </Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12}>\r\n                                <Typography className={classes.header} >\r\n                                    What is the Fifteen Game?\r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    The Fifteen Game is a two player simple strategy game that can be played with pencil and paper.\r\n                                    To start, write down the numbers 1 through 9. Players take turns circling one of the numbers\r\n                                    to claim it as theirs. Both player have the same goal: Get a set of <em>exactly</em> three numbers\r\n                                    that add up to <em>exactly</em> fifteen. If you end up circling four or five numbers that's fine, \r\n                                    but you can only combine three of your claimed numbers to make a fifteen and win. \r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    The game is a great tool for making practice of mental addition more fun. The classic version is \r\n                                    played with the numbers 1 through 9 but the rules can be easily adapted to let kids practice with\r\n                                    other number sets. Players are challenged to think both offensively and defensively.\r\n                                </Typography>\r\n                                <Typography className={classes.header} >\r\n                                    Why teach Tic Tac Toe and the Fifteen Game together?\r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    I could just tell you why right here, but it would really be better for you to just explore the rest\r\n                                    of this web app to experience the answer for yourself. I recommend these steps: \r\n                                    1) Play a few rounds of Tic Tac Toe \r\n                                    2) Play a few rounds of the Fifteen Game \r\n                                    3) Describe thoroughly the apparent similiarities and differences between these two games.\r\n                                    4) Read the lesson on Magic Squares\r\n                                    \r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    One of the most amazing things about math is its ability to show us how things that seem\r\n                                    different on the surface are actually the same deep down.  By completing the above \r\n                                    steps you will get to experience two games that feel very different to play even though \r\n                                    beneath the surfaces, they are exactly the same game.\r\n                                    \r\n                                </Typography>       \r\n                            </Grid>\r\n                            \r\n                            \r\n                        </Grid>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel> \r\n\r\n                {/* What does it mean to Master Tic Tac Toe? */}\r\n                <ExpansionPanel \r\n                    className={classes.panel} \r\n                    expanded={expanded === 'panel7'} \r\n                    onChange={handleChange('panel7')}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel7bh-content\"\r\n                        id=\"panel7bh-header\"\r\n                    >\r\n                        <Typography className={classes.title} >\r\n                            What does it mean to Master Tic Tac Toe?\r\n                        </Typography>\r\n                    </ExpansionPanelSummary>\r\n                    <ExpansionPanelDetails>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12}>\r\n                                <Typography className={classes.header} >\r\n                                    It is true that the best outcome either player can <em>force</em> is a draw.\r\n                                    Many people assume that if they can go second and force a draw that they know \r\n                                    all there is to know about Tic Tac Toe. Not true! \r\n                                </Typography>\r\n                                <Typography className={classes.body} >\r\n                                    \r\n                                </Typography>\r\n                                     \r\n                            </Grid>\r\n                            \r\n                            \r\n                        </Grid>\r\n                    </ExpansionPanelDetails>\r\n                </ExpansionPanel> \r\n                \r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// My Components\r\n\r\n// MUI  components\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n    square: {\r\n        margin: '2%',\r\n        width: '27%',\r\n        height: '27%',\r\n        boxSizing: 'border-box',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        // backgroundColor: '#00CC00'\r\n    },\r\n    iconX: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    iconO: {\r\n        width: '80%',\r\n        height: '80%',\r\n    },\r\n\r\n    immediateWin: {\r\n        backgroundColor: '#00bb00'\r\n    },\r\n    doubleAttackCreatingMove: {\r\n        backgroundColor: '#55bb00'\r\n    },\r\n    forcedWinCreatingMove: {\r\n        backgroundColor: '#88ee33'\r\n    },\r\n\r\n    urgentDefensiveMove: {\r\n        backgroundColor: '#ff6600'\r\n    },\r\n    unavoidableDefeat: {\r\n        backgroundColor: '#ff4433'\r\n    },\r\n    gameLosingMove: {\r\n        backgroundColor: '#EEDD11'\r\n    },\r\n    \r\n});\r\n\r\nexport default function Square(props) {\r\n    const classes = useStyles();\r\n    const id = props.id\r\n    const symbol = props.symbol\r\n    const color = props.color  // String '', 'immediateWin', 'unavoidableDefeat', 'doubleAttackCreatingMove', 'urgentDefensiveMove', 'forcedWinCreatingMove'\r\n    const handleClick = props.handleClick\r\n\r\n\r\n    let icon;\r\n    switch (symbol) {\r\n        case 'x':\r\n            icon = <ClearIcon className={classes.iconX} />\r\n            break;\r\n        case 'o':\r\n            icon = <RadioButtonUncheckedIcon className={classes.iconO} />\r\n            break;\r\n        case '':\r\n            icon = null;\r\n            break;\r\n        default:\r\n            throw console.error(\"Square passed symbol not 'x' 'o' or ''\");\r\n            break;\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    \r\n    let className;\r\n    switch (color) {\r\n        case 'immediateWin':\r\n            className = `${classes.square} ${classes.immediateWin} `\r\n            break;\r\n        case 'unavoidableDefeat':\r\n            className = `${classes.square} ${classes.unavoidableDefeat} `\r\n            break;\r\n        case 'urgentDefensiveMove':\r\n            className = `${classes.square} ${classes.urgentDefensiveMove} `\r\n            break;\r\n        case 'doubleAttackCreatingMove':\r\n            className = `${classes.square} ${classes.doubleAttackCreatingMove} `\r\n            break;\r\n        case 'forcedWinCreatingMove':\r\n            className = `${classes.square} ${classes.forcedWinCreatingMove} `\r\n            break;\r\n        case 'gameLosingMove':\r\n            className = `${classes.square} ${classes.gameLosingMove} `\r\n            break;    \r\n        default:\r\n            className = `${classes.square} `\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            elevation={4}\r\n            className={className}\r\n            onClick={() => handleClick(id)}\r\n        >\r\n            {icon}\r\n        </Paper>\r\n    )\r\n}","import React from 'react';\r\n\r\n// My Components\r\nimport Square from \"./Square\";\r\n\r\n// MUI  components\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    board: {\r\n        // border: 'solid blue 1px',\r\n        width: '76.4%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n\r\nexport default function Board(props) {\r\n    const classes = useStyles();\r\n    const handleSquareClick = props.handleSquareClick\r\n    const boardSymbols = props.boardSymbols;\r\n    const boardColors = props.boardColors; // Array of 9 strings '', 'immediateWin', 'unavoidableDefeat', 'doubleAttackCreatingMove', 'urgentDefensiveMove', 'forcedWinCreatingMove'\r\n    \r\n    let board = [];\r\n    for (let id = 0; id < 9; id++) {\r\n        let newSquare =\r\n            <Square\r\n                key={id}\r\n                id={id}\r\n                symbol={boardSymbols[id]}\r\n                color={boardColors[id]}\r\n                handleClick={handleSquareClick}\r\n            />\r\n        ;\r\n        board = board.concat(newSquare);\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <div className={classes.board}>\r\n            {board}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// MUI Components\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    button: {\r\n        // border: 'solid red 1px',\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontSize: 'min(max(0.7rem, 3vmin), 24px)',\r\n        lineHeight: '0.8vmin',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: '1vmin',\r\n        fontSize: 'larger'\r\n        // fontSize: 'min(max(0.7rem, 3vmin), 22px)',\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    \r\n}));\r\n\r\nexport default function HowToPlayModal() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={handleOpen}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n            >\r\n                <HelpOutlineIcon className={classes.buttonIcon} />\r\n                Help\r\n            </Button>\r\n\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"transition-modal-title\">How To Play</h2>\r\n                        <ul id=\"transition-modal-description\" >\r\n                            <li>\r\n                                X and O take turns claiming one of the 9 squares on the board.\r\n                            </li>\r\n                            <li>\r\n                                The first player to claim all 3 squares in a single row, column, or diagonal.\r\n                            </li>\r\n                            <li>\r\n                                By default, you go first and play against my Bot, which will never fail to get a draw.\r\n                            </li>\r\n                            <li>\r\n                                In the Settings you can adjust whether you play as X or O and against the computer or not.\r\n                            </li>\r\n                            <li>\r\n                                You can also adjust whether to show/hide commentary and move hints.\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// MUI Icons\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    button: {\r\n        // border: 'solid red 1px',\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontSize: 'min(max(0.7rem, 3vmin), 24px)',\r\n        lineHeight: '0.8vmin',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: '1vmin',\r\n        fontSize: 'larger'\r\n        // fontSize: 'min(max(0.7rem, 3vmin), 22px)',\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    switchBox: {\r\n        // border: 'solid red 1px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n\r\n    },\r\n    switchLabel: {\r\n        fontSize: '2.2vmin',\r\n        width: '40%'\r\n\r\n    }\r\n}));\r\n\r\nexport default function SettingsModal(props) {\r\n    const classes = useStyles();\r\n    const showMoves = props.showMoves\r\n    const showCommentary = props.showCommentary\r\n    const toggleShowMovesSwitch = props.toggleShowMovesSwitch\r\n    const toggleShowCommentarySwitch = props.toggleShowCommentarySwitch\r\n\r\n    // Modal Open & Close \r\n    const [open, setOpen] = React.useState(false);\r\n    const openSettingsModal = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const showMovesSwitch = (\r\n        <React.Fragment>\r\n            <Box className={classes.switchBox}>\r\n                <Typography className={classes.switchLabel}>\r\n                    Show Moves\r\n                </Typography>\r\n                <Switch\r\n                    checked={showMoves}\r\n                    onChange={toggleShowMovesSwitch}\r\n                    color=\"primary\"\r\n                    name=\"checkedB\"\r\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                />\r\n            </Box>\r\n            <DialogContentText>\r\n                Show whether each possible move leads to a win, loss, or draw.\r\n            </DialogContentText>\r\n        </React.Fragment>\r\n    );\r\n\r\n    const showCommentarySwitch = (\r\n        <React.Fragment>\r\n            <Box className={classes.switchBox}>\r\n                <Typography className={classes.switchLabel}>\r\n                    Show Commentary\r\n            </Typography>\r\n                <Switch\r\n                    checked={showCommentary}\r\n                    onChange={toggleShowCommentarySwitch}\r\n                    color=\"primary\"\r\n                    name=\"checkedB\"\r\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                />\r\n            </Box>\r\n            <DialogContentText>\r\n                Show verbal hints about the position.\r\n            </DialogContentText>\r\n        </React.Fragment>\r\n        \r\n        \r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={openSettingsModal}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\" \r\n            >\r\n                <SettingsIcon className={classes.buttonIcon} />\r\n                Settings\r\n            </Button>\r\n            \r\n            \r\n            <Dialog \r\n                open={open} \r\n                onClose={handleClose} \r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    Settings\r\n                </DialogTitle>\r\n                \r\n                <DialogContent>\r\n                    \r\n                    {showCommentarySwitch}\r\n                    \r\n                    {showMovesSwitch}\r\n                    \r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button \r\n                        onClick={handleClose} \r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                    >\r\n                        Apply\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// Custom Components\r\nimport HelpModal from \"./HelpModal\";\r\nimport SettingsModal from \"./SettingsModal\";\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n    panel: {\r\n        boxSizing: 'border-box',\r\n        marginTop: '3%',\r\n        width: '100%',\r\n        height: '94%',\r\n        padding: '3%',\r\n        \r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        \r\n    },\r\n    infoArea: {\r\n        \r\n    },\r\n    buttonArea: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        // border: 'solid red 1px',\r\n        width: '100%',\r\n        height: '18%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontSize: 'min(max(0.7rem, 3vmin), 24px)',\r\n        // lineHeight: '1vmin',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: '1vmin',\r\n        fontSize: 'larger'\r\n        // fontSize: 'min(max(0.7rem, 3vmin), 22px)',\r\n    },\r\n    switchLabel: {\r\n        lineHeight: '1rem'\r\n    },\r\n    statusText: {\r\n        fontSize: '5vmin',\r\n        fontWeight: 'bold'\r\n    },\r\n    commentary: {\r\n        fontSize: '2.2vmin',\r\n        paddingRight: '5vmin'\r\n    },\r\n}));\r\n\r\nexport default function Panel(props) {\r\n    const classes = useStyles();\r\n    const status = props.status;\r\n    const commentary = props.commentary;\r\n\r\n    \r\n    const showMoves = props.showMoves \r\n    const showCommentary = props.showCommentary \r\n    const handleUndoButtonClick = props.handleUndoButtonClick\r\n    const handleNewGameButtonClick = props.handleNewGameButtonClick\r\n    const toggleShowMovesSwitch = props.toggleShowMovesSwitch\r\n    const toggleShowCommentarySwitch = props.toggleShowCommentarySwitch\r\n    \r\n    const undoButton = (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => handleUndoButtonClick()}\r\n            \r\n        >\r\n            <UndoIcon className={classes.buttonIcon} />\r\n            Undo\r\n        </Button>\r\n\r\n        \r\n    );\r\n\r\n    const newGameButton = (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => handleNewGameButtonClick()} \r\n        >\r\n            <ReplayIcon className={classes.buttonIcon} />\r\n            New&nbsp;Game\r\n        </Button>\r\n    );\r\n\r\n    const helpButton = (\r\n        <div className={classes.button} >\r\n            <HelpModal />\r\n        </div>\r\n    );\r\n\r\n    const settingsButton = (\r\n        <div className={classes.button} >\r\n            <SettingsModal \r\n                showMoves={showMoves}\r\n                showCommentary={showCommentary}\r\n                toggleShowMovesSwitch={toggleShowMovesSwitch}\r\n                toggleShowCommentarySwitch={toggleShowCommentarySwitch}\r\n            />\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <Paper className={classes.panel}>\r\n            <Grid container>\r\n                <Grid item className={classes.infoArea} xs={8}>\r\n                    <Typography className={classes.statusText} noWrap >\r\n                        {status}\r\n                    </Typography>\r\n                    <Typography className={classes.commentary}  >\r\n                        {commentary}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item className={classes.buttonArea} xs={4}>\r\n                    {undoButton}\r\n                    {newGameButton}\r\n                    {helpButton}\r\n                    {settingsButton}\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            \r\n            \r\n                \r\n             \r\n        </Paper>\r\n    )\r\n\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// My Components\r\nimport Board from \"./Board\";\r\nimport Panel from \"./Panel\";\r\n\r\n\r\n// MUI  components\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        // justifyContent: 'flex-end',\r\n        alignItems: 'center',\r\n        // backgroundColor: '#4AC9FD'\r\n        \r\n    },\r\n    boardArea: {\r\n        backgroundColor: '#bbffff',\r\n        height: '60%',\r\n        width: '95%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    panelArea: {\r\n        // border: 'solid blue 1px',\r\n        // backgroundColor: '#4AC9FD',\r\n        boxSizing: 'border-box',\r\n        width: '95%',\r\n        height: '40%',\r\n        \r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n        \r\n    },\r\n}));\r\n\r\n\r\nexport default function TicTacToeGame() {\r\n    const classes = useStyles();\r\n\r\n    let [history, setHistory] = useState([]); \r\n    // let [showMoves, setShowMoves] = useState(false); \r\n    let [showMoves, setShowMoves] = useState(true); \r\n    // let [showCommentary, setShowCommentary] = useState(false);  \r\n    let [showCommentary, setShowCommentary] = useState(true);  \r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <div className={classes.boardArea} >\r\n                <Board \r\n                    boardSymbols={getBoardSymbols()} \r\n                    boardColors={getBoardColors()}\r\n                    handleSquareClick={handleSquareClick}\r\n                />\r\n            </div>\r\n            <div className={classes.panelArea}>\r\n                <Panel \r\n                    // data={getPanelData(history)} \r\n                    status={getStatus()}\r\n                    commentary={getCommentary()}\r\n                    showMoves={showMoves}\r\n                    showCommentary={showCommentary}\r\n                    handleUndoButtonClick={handleUndoButtonClick} \r\n                    handleNewGameButtonClick={handleNewGameButtonClick}\r\n                    toggleShowMovesSwitch={toggleShowMovesSwitch}\r\n                    toggleShowCommentarySwitch={toggleShowCommentarySwitch}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    // The <Game> holds all state and most helper and handler function definitions.\r\n    // It passes what it needs to to the board to render and to the panel.\r\n    \r\n    // The board data to render is a the latest entry in history.  We will have an 'undo' but not a 'redo' button.  May add a Make Computer Move\r\n    function getBoardSymbols(moveList = history) {\r\n        let data = Array(9).fill('');  // Start with an array representing a board of NINE empty squares\r\n        squaresClaimedByPlayer('x').forEach(squareId => {\r\n            data[squareId] = 'x';\r\n        });\r\n        squaresClaimedByPlayer('o').forEach(squareId => {\r\n            data[squareId] = 'o';\r\n        });\r\n        return data;  // this method only deals with current board position, not hypotheticals.  Thus, it wants to use a version of helper squaresClaimedByPlayer() that does not require a moveList be explicitly passed in. \r\n    }\r\n\r\n    function getBoardColors() {\r\n        // If the game is won highlight the winning line(s), whether hints are turned on or off.\r\n        if (wins('x') || wins('o')) {\r\n            return highlightWins();\r\n        }\r\n        // If hints are turned off return colors [] filled with empty strings.\r\n        if (showMoves === false) {\r\n            return Array(9).fill('');\r\n        }\r\n        // If hints are turned on return colors [] filled by getBoardHints().\r\n        if (showMoves === true) {\r\n            console.log(`Board Hints: ${getBoardHints()}`)\r\n            return getBoardHints();\r\n        }\r\n    }\r\n\r\n    \r\n    // TODO\r\n    function getBoardHints() {\r\n        // PRIORITIES  Each of the following steps \r\n        // 1) Mark any squares that would create an immediateWin.\r\n        // 2) If opponent will have an immediateWin no matter what you do right now mark the key squares. \r\n        // 3) If there is one urgentDefensiveMove, mark it as either a keyAttackingMove or an urgentDefensiveMove, whatever is the case.\r\n        // 4) Mark any squares that would create a double attack, if there is only one such move and it is also a keyDefensiveMove then it was marked in step 3.\r\n        // ??? 4) Mark any hard to see mistakes that would allow opponent to create a double attack.\r\n        // 5) Mark any forcing moves that keep the opponent busy this turn and allow you to create a double attack next turn.\r\n        const player = myTurn(history);\r\n        let hints = Array(9).fill('');  // Start with an array representing a board of NINE squares.\r\n        \r\n        // (1) \r\n        if (immediateWins().length > 0) {\r\n            console.log(`In the current position player '${player}' has ${immediateWins().length} immediateWins`)\r\n            immediateWins().forEach(winningSquare => {\r\n                hints[winningSquare] = 'immediateWin';\r\n            });\r\n            return hints;\r\n        }\r\n        else {\r\n            console.log(`In the current position player '${player}' has NO immediateWins `)\r\n        }\r\n        \r\n        // (2) If there are multiple urgentDefensiveMoves that means you face unavoidableDefeat.\r\n        if (urgentDefensiveMoves().length > 1) {\r\n            console.log(`In the current position player '${player}' has MULTIPLE (${urgentDefensiveMoves().length}) urgentDefensiveMoves`)\r\n            urgentDefensiveMoves().forEach(keySquare => {\r\n                hints[keySquare] = 'unavoidableDefeat';\r\n            });\r\n            return hints;\r\n        }\r\n\r\n        // (3) If there is exactly one urgentDefensiveMove it may also be a doubleAttackCreatingMove which is of greater interest as a hint.\r\n        else if (urgentDefensiveMoves().length === 1) {\r\n            console.log(`In the current position player '${player}' has ONE urgentDefensiveMove`)\r\n            const keyDefensiveMove = urgentDefensiveMoves()[0];\r\n            if (doubleAttackCreatingMoves().includes(keyDefensiveMove)){\r\n                hints[keyDefensiveMove] = 'doubleAttackCreatingMove';\r\n            }\r\n            else {\r\n                hints[keyDefensiveMove] = 'urgentDefensiveMove';\r\n            }\r\n            return hints;  // Return because if there is an urgent defense it has been labeled and nothing else matters. even if there are doubleAttackCreatingMoves available.\r\n        }\r\n        else {\r\n            console.log(`In the current position player '${player}' has NO urgentDefensiveMoves`)\r\n        }\r\n        \r\n        // If we reach this point without returning we are sure there are no immediateWins or urgentDefences. \r\n        // (4) \r\n        if (doubleAttackCreatingMoves().length > 0) {  \r\n            console.log(`In the current position player '${player}' has ${doubleAttackCreatingMoves().length} doubleAttackCreatingMoves`)\r\n            doubleAttackCreatingMoves().forEach(keyAttackingMove => {\r\n                hints[keyAttackingMove] = 'doubleAttackCreatingMove';\r\n            }); \r\n            return hints;\r\n        }\r\n        else {\r\n            console.log(`In the current position player '${player}' has NO doubleAttackCreatingMoves`)\r\n        }\r\n\r\n        // If we reach this point without returning we are sure there are no immediateWins, no urgentDefences, and no doubleAttackCreatingMoves.\r\n        // (5) \r\n        if (thereIsAForcedWin()) {\r\n            console.log(`In the current position player '${player}' has ${forcedWinCreatingMoves().length} forcedWinCreatingMoves`)\r\n            forcedWinCreatingMoves().forEach(thereIsAForcedWin => {\r\n                hints[thereIsAForcedWin] = 'forcedWinCreatingMove';\r\n            });\r\n            return hints;\r\n        }\r\n        else {\r\n            console.log(`In the current position player '${player}' has NO forcedWinCreatingMoves`)\r\n        }\r\n\r\n        // (6)\r\n        if (gameLosingMoves().length > 0) {\r\n            console.log(`In the current position player '${player}' has ${gameLosingMoves().length} gameLosingMoves`)\r\n            gameLosingMoves().forEach(mistakeMove => {\r\n                hints[mistakeMove] = 'gameLosingMove';\r\n            });\r\n            return hints;\r\n        }\r\n        else {\r\n            console.log(`In the current position player '${player}' has NO gameLosingMoves`)\r\n        }\r\n        // console.log(`Searched for immediateWins, urgentDefences, doubleAttackCreatingMoves, and forcedWinCreatingMoves, and gameLosingMoves and found NONE. `)\r\n        return hints;\r\n    }\r\n\r\n\r\n    // MID-LEVEL HELPERS for getBoardColors() and getBoardHints()\r\n    function highlightWins() {\r\n        let highlightedSquares = Array(9).fill('')\r\n        if (!gameOver()) {  // Assert: we only reach this point if either x or o has won.\r\n            console.error(`highlightWins() was called but found that the game is not over`);\r\n        }\r\n        let winner = (wins('x')) ? 'x' : 'o';\r\n        // let lines = lines(winner);\r\n        linesWithThree(winner).forEach(line => {\r\n            squaresInLine(line).forEach(square => {\r\n                highlightedSquares[square] = 'immediateWin';\r\n            });\r\n        });\r\n        return highlightedSquares;\r\n    } \r\n     \r\n    function thereIsAnImmediateWin(moveList = history) {\r\n        return (immediateWins(moveList).length > 0)\r\n    }\r\n\r\n    function immediateWins(moveList = history){\r\n        let winningSquares = [];\r\n        const player = myTurn(moveList);\r\n        linesWithOnlyTwo(player, moveList).forEach((line) => {\r\n            squaresInLine(line).forEach((square) => {\r\n                if (squareIsEmpty(square)) {\r\n                    winningSquares.push(square);\r\n                    // hints[square] = 'win'; This code used to be part of a bloated getBoardHints() method and at that time it had responsibility for actually assigning colors in the hints array to the square it now simply returns in a list.\r\n                }\r\n            })\r\n        })\r\n        return winningSquares;\r\n    }\r\n\r\n    function thereIsAnUrgentDefensiveMove(moveList = history) {\r\n        return (urgentDefensiveMoves(moveList).length > 0)\r\n    }\r\n    \r\n    function urgentDefensiveMoves(moveList = history) {\r\n        const player = myTurn(moveList);\r\n        let urgentDefensiveMovesList = [];\r\n        linesWithOnlyTwo(other(player), moveList).forEach((line) => {\r\n            // console.log(`urgentDefensiveMoves found line ${line} has only two ${other(player)}`)\r\n            squaresInLine(line).forEach((square) => {\r\n                if (squareIsEmpty(square, moveList)) {\r\n                    urgentDefensiveMovesList.push(square);\r\n                }\r\n            })\r\n        })\r\n        // console.log(`urgentDefensiveMoves() found the following moves for ${player}: ${urgentDefensiveMovesList}`);\r\n        return urgentDefensiveMovesList;\r\n    }\r\n\r\n    function threatCreatingMoves(moveList = history) {\r\n        // This list may contain duplicates. A squareId that appears twice creates two separate two-in-a-line threats.\r\n        const player = myTurn(moveList);\r\n        const threatCreatingMoves = []; \r\n        linesWithOnlyOne(moveList).forEach((line) => {\r\n            squaresInLine(line).forEach((square) => {\r\n                if (squareIsEmpty(square, moveList)) {                 // Don't add an already claimed square to the list of therat creating moves!\r\n                    threatCreatingMoves.push(square);\r\n                }\r\n            })\r\n        })\r\n        // console.log(`Player '${player}' can create threats on the following squares: ${threatCreatingMoves}`)\r\n        return threatCreatingMoves;\r\n    }\r\n\r\n    function singleAttackCreatingMoves(moveList = history) {\r\n        return threatCreatingMoves(moveList).filter((square, index) => threatCreatingMoves(moveList).indexOf(square) === index);\r\n    }\r\n\r\n    function doubleAttackCreatingMoves(moveList = history) {\r\n        return threatCreatingMoves(moveList).filter((square, index) => threatCreatingMoves(moveList).indexOf(square) !== index );\r\n    }\r\n\r\n    function thereIsAWinningDoubleAttack(moveList = history) {\r\n        return (winningDoubleAttackCreatingMoves(moveList).length > 0)\r\n    }\r\n\r\n    function winningDoubleAttackCreatingMoves(moveList = history) {\r\n        let winningDoubleAttacksList = [];\r\n        // A doubleAttack is winning IFF it can be made without ignoring an urgentDefensiveMove.\r\n        // A doubleAttackCreatingMove is winning IF there were no urgentDefensiveMoves OR IF it is identical to the ONE urgentDefensiveMove.\r\n        doubleAttackCreatingMoves(moveList).forEach(keyAttackingMove => {\r\n            // IF there are ZERO urgentDefensiveMoves then every doubleAttackCreatingMove is winning.\r\n            if (urgentDefensiveMoves(moveList).length === 0 ) { \r\n                winningDoubleAttacksList = winningDoubleAttacksList.concat(keyAttackingMove);\r\n            }\r\n            // IF there is ONE urgentDefensiveMove then the only doubleAttackCreatingMove is winning.\r\n            else if (urgentDefensiveMoves(moveList).length === 1) {\r\n                if (urgentDefensiveMoves(moveList)[0] === keyAttackingMove){\r\n                    winningDoubleAttacksList = winningDoubleAttacksList.concat(keyAttackingMove);\r\n                }\r\n            }\r\n            // ELSE there are TWO or more urgentDefensiveMoves then none of the doubleAttackCreatingMoves should be added to the winning.\r\n        })\r\n        // console.log(`winningDoubleAttacksList: ${winningDoubleAttacksList}`)\r\n        return winningDoubleAttacksList;\r\n    }\r\n    \r\n    // By Definition: There are NO forcedWinCreatingMoves IF there is a quicker way to win OR IF the opponent already made a forcedWinCreatingMove\r\n    function forcedWinCreatingMoves(moveList = history) {\r\n        let forcedWinCreatingMovesList = [];\r\n        if (thereIsAnImmediateWin(moveList) || thereIsAWinningDoubleAttack(moveList)) {\r\n            console.log(`Returning Early (list of length 0) from forcedWinCreatingMoves() because there is a quicker way to win.`)\r\n            console.log(`thereIsAnImmediateWin(moveList): ${thereIsAnImmediateWin(moveList)}  MoveList: ${moveList}`)\r\n            console.log(`thereIsAWinningDoubleAttack(moveList): ${thereIsAWinningDoubleAttack(moveList)}`)\r\n            return forcedWinCreatingMovesList;\r\n        }\r\n        // \r\n        // if (thereIsAWinningDoubleAttack(moveList)) {\r\n        //     console.log(`Returning Early (list of length 0) from forcedWinCreatingMoves() because there is a quicker way to win.`)\r\n        //     return forcedWinCreatingMovesList;\r\n        // }\r\n\r\n        // console.log(`forcedWinCreatingMoves found the following singleAttackCreatingMoves for player '${myTurn(moveList)}' based on the ${moveList} ==> ${singleAttackCreatingMoves(moveList)}`)\r\n        singleAttackCreatingMoves(moveList).forEach(threatCreatingMove => {  // At most we are examining 6 squares that might create a threat\r\n            let hypotheticalHistory = moveList.concat(threatCreatingMove);\r\n            let forcedDefensiveMove = urgentDefensiveMoves(hypotheticalHistory)[0];\r\n            hypotheticalHistory = hypotheticalHistory.concat(forcedDefensiveMove);\r\n            // console.log(`After adding the threatCreatingMove \"${threatCreatingMove}\" and the urgentDefensiveMove \"${keyDefensiveMove}\" to the moveList the hypotheticalHistory is now: ${hypotheticalHistory}`);\r\n            if (thereIsAWinningDoubleAttack(hypotheticalHistory)) {\r\n                // console.log(`In the hypotheticalHistory: ${hypotheticalHistory} these are the winningDoubleAttackCreatingMoves: ${winningDoubleAttackCreatingMoves(hypotheticalHistory)}`);\r\n                forcedWinCreatingMovesList = forcedWinCreatingMovesList.concat(threatCreatingMove);\r\n            }\r\n        })\r\n        // After finding all the \r\n        if (thereIsAnUrgentDefensiveMove()) {\r\n            console.log(`Since thereIsAnUrgentDefensiveMove the forcedWinCreatingMovesList must be filtered.`)\r\n            forcedWinCreatingMovesList = forcedWinCreatingMovesList.filter(move => move === urgentDefensiveMoves(moveList)[0]);\r\n        }\r\n        // console.log(`forcedWinCreatingMoves() found the following list: ${forcedWinCreatingMovesList}`)\r\n        return forcedWinCreatingMovesList;\r\n    }\r\n    \r\n    // Check if each of the squares that is is still empty is a losing Move\r\n    function gameLosingMoves(moveList = history) {  // This function should ONLY be called by getBoardHints when there are no forced Win Creating Moves\r\n        let gameLosingMoves = [];\r\n        emptySquares().forEach(square => {\r\n            const hypotheticalHistory = moveList.concat(square);\r\n            if (thereIsAForcedWin(hypotheticalHistory)) {\r\n                console.log(`I think I found a forced win after the moves: ${hypotheticalHistory}`)\r\n                gameLosingMoves = gameLosingMoves.concat(square)\r\n            }\r\n        })\r\n        console.log(`gameLosingMoves() found the following list: ${gameLosingMoves}`)\r\n        return gameLosingMoves;\r\n    }\r\n\r\n\r\n\r\n    \r\n    // HIGH-LEVEL PANEL HELPERS no params\r\n\r\n    function getStatus() {\r\n        if (wins('x')) {\r\n            return (`X wins!`)\r\n        }\r\n        else if (wins('o')) {\r\n            return (`O wins!`)\r\n        }\r\n        else if (gameDrawn()) {\r\n            return (`Draw.`)\r\n        }\r\n        else if (history.length % 2 === 0) {\r\n            return (`X's turn.`)\r\n        }\r\n        else if (history.length % 2 === 1) {\r\n            return (`O's turn.`)\r\n        }\r\n        else {\r\n            console.error(\"A call to getStatus() did not work!\");\r\n            return\r\n        }\r\n    }\r\n    function getCommentary() {\r\n        console.log(`getCommentary() called while showCommentary = ${showCommentary}`)\r\n        if (gameOver()) {\r\n            return `Game Over`\r\n        }\r\n        if (!showCommentary) {\r\n            return `Coach's commentary would appear here if turned on in the settings.`\r\n        }\r\n\r\n        // If no moves have been made\r\n        if (history.length === 0) {\r\n            return `X goes first. It may look like there are 9 different options but \r\n            when you consider symmetry there are really only 3: Center, Edge, or Corner.`\r\n        }\r\n\r\n        // If one move has been made\r\n        if (history.length === 1 && history[0] === 4) {\r\n            return `X went in the center. O has two options. One is good and lets O\r\n            force a draw. The other is bad and gives X a chance to win.`\r\n        }\r\n        if (history.length === 1 && history[0] !== 4 && history[0] % 2 === 0 ) {\r\n            return `X went in the corner. O has five non-symmetrical options. Only \r\n            one of them prevents X from being able to force a win.`\r\n        }\r\n        if (history.length === 1 && history[0] !== 4 && history[0] % 2 === 1) {\r\n            return `X went on the edge. O has five non-symmetrical options. __ are\r\n            good and let O force a draw. The other __ are mistakes that give X a \r\n            chance to win.`\r\n        }\r\n\r\n        // If two moves has been made\r\n        if (history.length === 2) {\r\n            const player = myTurn();\r\n            const ones = linesWithOnlyOne().length\r\n            \r\n            return `Each player has gone once and now X has ${ones} lines with a 1-0 advantage. Look for a forcing move that will set you up to make a double attack next turn!`\r\n        }\r\n\r\n        // If three moves have been made\r\n        if (history.length === 3 && forcedWinCreatingMoves()) {\r\n            return `O's first move was a mistake and now X has set up a forced win in two moves!`\r\n        }\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n    // CLICK HANDLERS\r\n    function handleSquareClick(squareClicked) {\r\n        if (gameOver()) {\r\n            console.log(\"return without effects from handleSquareClick(). The Game is already over.\")\r\n            return;\r\n        }\r\n        if (!squareIsEmpty(squareClicked)) {\r\n            console.log(\"return without effects from handleSquareClick(). That square has already been claimed.\")\r\n            return;\r\n        }\r\n        // If we reach this point the clicked square is open and the game is not over yet ... \r\n        console.log(`History: ${history.concat(squareClicked)}`)\r\n        \r\n        setHistory(history.concat(squareClicked));\r\n        // This function does not pass along any of its results, it acts thru side-effects. It calls setHistory and use of that hook tells React it needs to re-render all components that depend on the state \"history\".\r\n    }\r\n    function handleUndoButtonClick() {\r\n        const shortenedHistory = history.slice(0, history.length - 1)\r\n        console.log(`handleUndoButtonClick() removed ${history[history.length - 1]} . New Shortened history: ${shortenedHistory}`);\r\n        setHistory(shortenedHistory);\r\n    }\r\n    function handleNewGameButtonClick() {\r\n        const empty = [];\r\n        console.log(`History reset to: ${empty}`);\r\n        setHistory(empty);\r\n    }\r\n    function toggleShowMovesSwitch() {\r\n        setShowMoves(!showMoves)\r\n    }\r\n    function toggleShowCommentarySwitch() {\r\n        setShowCommentary(!showCommentary)\r\n    }\r\n    \r\n    \r\n    // TURN HELPERS\r\n    // High-Level Methods that need to know whose turn it is can deduce that info by using these helpers to look at the history directly, rather than having to be invoked with a player param. \r\n    function myTurn(moveList = history) {\r\n        return (moveList.length % 2 === 0) ? 'x' : 'o' ;\r\n    }\r\n    function notMyTurn(moveList = history) {\r\n        return (moveList.length % 2 === 0) ? 'o' : 'x';\r\n    }\r\n    function other(player) {\r\n        if (player !== 'o' && player !== 'x') { console.error(`other(player) called with invalid player: ${player}`)}\r\n        return (player === 'o') ? 'x' : 'o';\r\n    }\r\n\r\n\r\n    // LOW-LEVEL HELPERS\r\n    // need to be told which player you care about b/c they may be used on EITHER the player whose turn it is or the other player.\r\n    function squaresClaimedByPlayer(player, moveList = history) {\r\n        // let history = (alteredHistory === undefined) ? history : alteredHistory\r\n        \r\n        if (player === 'x') {\r\n            return moveList.filter((squareId, index) => index % 2 === 0);\r\n        }\r\n        else if (player === 'o') {\r\n            return moveList.filter((squareId, index) => index % 2 === 1);\r\n        }\r\n        else {\r\n            console.error(`Method squaresClaimedByPlayer() called with invalid player: ${player}`)\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    function lineCountsFor(player, moveList = history) {\r\n        // Based on the history state, return an array of 8 ints 0-3 indicating the number of X's or O's in each row, col, and diagonal\r\n        // const player = myTurn(moveList); \r\n        let lines = Array(8).fill(0);\r\n\r\n        squaresClaimedByPlayer(player, moveList).forEach(square => {\r\n            // Update Row\r\n            const row = Math.floor(square / 3)    // number 0, 1, or 2\r\n            lines[row]++;\r\n\r\n            // Update Col\r\n            const col = (square % 3)            // number 0, 1, or 2  +3 to account for the three indexes set asside for rows\r\n            lines[col + 3]++;\r\n\r\n            // UpSlash ?\r\n            if (square === 2 || square === 4 || square === 6) {\r\n                lines[6]++\r\n            }\r\n\r\n            // DownSlash ?\r\n            if (square === 0 || square === 4 || square === 8) {\r\n                lines[7]++\r\n            }\r\n        });\r\n        // console.log(`Status: ${status}`)\r\n        return lines;\r\n    }\r\n\r\n    function wins(player, moveList = history) {\r\n        return (lineCountsFor(player, moveList).includes(3));\r\n    }\r\n\r\n    function thereIsAForcedWin(moveList = history) {\r\n        const thereIsAForcedWin = (immediateWins(moveList).length > 0\r\n            || winningDoubleAttackCreatingMoves(moveList).length > 0\r\n            || forcedWinCreatingMoves(moveList).length > 0)\r\n        // console.log(`immediateWins(moveList).length: ${immediateWins(moveList).length}`)\r\n        // console.log(`winningDoubleAttackCreatingMoves(moveList).length: ${winningDoubleAttackCreatingMoves(moveList).length}`)\r\n        console.log(`forcedWinCreatingMoves based on the moves: ${moveList} ==>  ${forcedWinCreatingMoves(moveList)}`)\r\n        // console.log(`thereIsAForcedWin for the current player: ${thereIsAForcedWin}`)\r\n        return thereIsAForcedWin;\r\n    }\r\n\r\n\r\n\r\n    function linesWithThree(player, moveList = history) {\r\n        let linesList = [];\r\n        // console.log(`lineCountsFor : ${lineCountsFor(player)}`)\r\n        lineCountsFor(player, moveList).forEach((count, line) => {\r\n            if (count === 3) {\r\n                linesList.push(line)\r\n            }\r\n        })\r\n        // console.log(`linesWithThree() called for player '${player}'. List: ${linesList}`)\r\n        return linesList;\r\n    }\r\n\r\n    function linesWithOnlyTwo(player, moveList = history) {\r\n        let linesList = [];\r\n        lineCountsFor(player, moveList).forEach((count, line) => {\r\n            if (count === 2 && lineCountsFor(other(player), moveList)[line] === 0 ) {  \r\n                linesList.push(line)\r\n            }\r\n        })\r\n        // console.log(`List Unblocked Twos for player '${player}': ${list}`)\r\n        return linesList;\r\n    }\r\n\r\n    function linesWithOnlyOne(moveList = history) {\r\n        const player = myTurn(moveList);\r\n        let linesList = [];\r\n        lineCountsFor(player, moveList).forEach((count, line) => {\r\n            if (count === 1 && lineCountsFor(other(player), moveList)[line] === 0) {\r\n                linesList.push(line)\r\n            }\r\n        })\r\n        // console.log(`List Unblocked Ones for player '${player}' based on moveList ${moveList} ==> ${linesList}`)\r\n        return linesList;\r\n    }\r\n    function emptyLines(moveList = history) {\r\n        let linesList = [];\r\n        lineCountsFor('x', moveList).forEach((count, line) => {\r\n            if (count === 0 && lineCountsFor('o', moveList)[line] === 0) {\r\n                linesList.push(line)\r\n            }\r\n        })\r\n        console.log(`List Empty Lines: ${linesList}`)\r\n        return linesList;\r\n    }\r\n    function blockedLines(moveList = history) {\r\n        let linesList = [];\r\n        lineCountsFor('x', moveList).forEach((count, line) => {\r\n            if (count > 0 && lineCountsFor('o', moveList)[line] > 0) {\r\n                linesList.push(line)\r\n            }\r\n        })\r\n        console.log(`List Blocked Lines: ${linesList}`)\r\n        return linesList;\r\n    }\r\n    function allLines() {\r\n        // Top Row, Middle Row, Bottom Row, \r\n        // Left Column, Middle Column, Right Column,\r\n        // Upslash Diagonal, Downslash Diagonal\r\n        return [0, 1, 2, 3, 4, 5, 6, 7]\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n\r\n    \r\n    // list all squareIds not appearing in the history or an \r\n    function emptySquares(moveList = history) {\r\n        let emptySquaresList = [];\r\n        for (let i = 0; i < 9; i++) {\r\n            if (!moveList.includes(i)) {\r\n                emptySquaresList.push(i)\r\n            }\r\n        }\r\n        // console.log(`List Empty Squares: ${emptySquaresList}`)\r\n        return emptySquaresList;\r\n    }\r\n    \r\n\r\n    // list the squareIds that fall in a given lineId\r\n    function squaresInLine(lineId) {\r\n        // console.log(`getSquares() was called with lineId: ${lineId}`)\r\n        let squareIds;\r\n        switch (lineId) {\r\n            case 0:\r\n                squareIds = [0, 1, 2];\r\n                break;\r\n            case 1:\r\n                squareIds = [3, 4, 5];\r\n                break;\r\n            case 2:\r\n                squareIds = [6, 7, 8];\r\n                break;\r\n            case 3:\r\n                squareIds = [0, 3, 6];\r\n                break;\r\n            case 4:\r\n                squareIds = [1, 4, 7];\r\n                break;\r\n            case 5:\r\n                squareIds = [2, 5, 8];\r\n                break;\r\n            case 6:\r\n                squareIds = [2, 4, 6];\r\n                break;\r\n            case 7:\r\n                squareIds = [0, 4, 8];\r\n                break;\r\n            default:\r\n                console.error(`getSquares() was called with an invalid lineId.`)\r\n        }\r\n        return squareIds;\r\n        \r\n    }\r\n\r\n\r\n    \r\n    // BOOLEAN helpers for getStatus() and handleSquareClick()\r\n    function squareIsEmpty(square, moveList = history) {\r\n        return (!moveList.includes(square))\r\n    }\r\n    \r\n\r\n    \r\n    // function gameDrawn() {\r\n    //     return (history.length >= 9 && !wins('x') && !wins('o'));  // Board full and neither player has a win\r\n    // }\r\n    function gameDrawn() {\r\n        return (blockedLines().length >= 8 && !wins('x') && !wins('o'));  // Board full and neither player has a win\r\n    }\r\n    \r\n    \r\n    \r\n    function gameOver(moveList = history) {\r\n        return (moveList.length >= 9 \r\n            || wins('x', moveList) \r\n            || wins('o', moveList));  // Board full or there's a 3-in-a-row\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\n\r\n// My Components\r\n\r\n// MUI  components\r\nimport Box from '@material-ui/core/Box';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n    square: {\r\n        margin: '1vmin',\r\n        width: '13vmin',\r\n        height: '13vmin',\r\n        boxSizing: 'border-box',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontSize: '10vmin',\r\n        fontWeight: 'bold',\r\n    },\r\n    playerOne: {\r\n        backgroundColor: '#3f51b5',\r\n        color: 'white',\r\n        \r\n    },\r\n    playerTwo: {\r\n        backgroundColor: '#4AC9FD',\r\n        \r\n    },\r\n    \r\n});\r\n\r\nexport default function NumberCard(props) {\r\n    const classes = useStyles();\r\n    const status = props.status\r\n    console.log(`NumCard called with status = ${status}`)\r\n    \r\n    const num = props.num\r\n    // function handleSquareClick(id) = props.handleSquareClick\r\n\r\n    let className;\r\n    switch (status) {\r\n        case 'red':\r\n            className = `${classes.square} ${classes.playerOne} `\r\n            break;\r\n        case 'yellow':\r\n            className = `${classes.square} ${classes.playerTwo} `\r\n            break;\r\n        case 'available':\r\n            className = `${classes.square} `\r\n            break;\r\n        default:\r\n            throw console.error(\"number card passed invalid status\");\r\n    }\r\n    //className={`${classes.square} ${classes.red} `}\r\n    return (\r\n        <Paper\r\n            className={className}\r\n            onClick={() => props.handleClick(num)}\r\n        >\r\n            {num}\r\n        </Paper>\r\n        \r\n    )\r\n}","import React from 'react';\r\n\r\n// My Components\r\nimport NumberCard from \"./NumberCard\";\r\n\r\n// MUI  components\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n    board: {\r\n        width: '50vmin',\r\n        height: '50vmin',\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n\r\n// .circle - container {\r\n//     position: relative;\r\n//     width: 24em;\r\n//     height: 24em;\r\n//     padding: 2.8em;\r\n//     /*2.8em = 2em*1.4 (2em = half the width of a link with img, 1.4 = sqrt(2))*/\r\n//     border: dashed 1px;\r\n//     border - radius: 50 %;\r\n//     margin: 1.75em auto 0;\r\n// }\r\n    // .circle - container a {\r\n    // display: block;\r\n    // position: absolute;\r\n    // top: 50 %; left: 50 %;\r\n    // width: 4em; height: 4em;\r\n    // margin: -2em;\r\n// }\r\n    // .circle - container img { display: block; width: 100 %; }\r\n    // .deg0 { transform: translate(12em); } /* 12em = half the width of the wrapper */\r\n    // .deg45 { transform: rotate(45deg) translate(12em) rotate(-45deg); }\r\n    // .deg135 { transform: rotate(135deg) translate(12em) rotate(-135deg); }\r\n    // .deg180 { transform: translate(-12em); }\r\n    // .deg225 { transform: rotate(225deg) translate(12em) rotate(-225deg); }\r\n    // .deg315 { transform: rotate(315deg) translate(12em) rotate(-315deg); }\r\n\r\nexport default function Board(props) {\r\n    const classes = useStyles();\r\n    \r\n    const history = props.history;\r\n    console.log(`Board recieved history: ${history}`)\r\n    const handleCardClick = props.handleCardClick;\r\n    \r\n    // Is a given number card claimed? If so by who?\r\n    function getStatus(num){\r\n        // console.log(`Get Status called on Num: ${num}`)\r\n        \r\n        const key = history.indexOf(num);\r\n        console.log(`Key: ${key}`)\r\n        if (key === -1){\r\n            return 'available';\r\n        }\r\n        else if (key % 2 === 0) {\r\n            return 'red';\r\n        }\r\n        else if (key % 2 === 1) {\r\n            return 'yellow';\r\n        }\r\n        else {\r\n            console.error(`getStatus(num) is returning undefined`)\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    \r\n    let board = [];\r\n    for (let num = 1; num <= 9; num++) {\r\n        let newNumberCard =\r\n            <NumberCard\r\n                key={num}\r\n                num={num}\r\n                status={getStatus(num)} \r\n                handleClick={handleCardClick}\r\n            />\r\n        ;\r\n        board = board.concat(newNumberCard);\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <div className={classes.board}>\r\n            {board}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// MUI Components\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    button: {\r\n        // border: 'solid red 1px',\r\n        width: '100%',\r\n        height: '100%',\r\n        fontSize: '0.8rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: '0.6rem'\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    \r\n}));\r\n\r\nexport default function HowToPlayModal() {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                onClick={handleOpen}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n            >\r\n                <HelpOutlineIcon className={classes.buttonIcon} /> \r\n                Help\r\n            </Button>\r\n\r\n\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={open}\r\n                onClose={handleClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={open}>\r\n                    <div className={classes.paper}>\r\n                        <h2 id=\"transition-modal-title\">How To Play</h2>\r\n                        <ul id=\"transition-modal-description\" >\r\n                            <li>\r\n                                Two players take turns claiming one of the 9 numbers.\r\n                            </li>\r\n                            <li>\r\n                                To win a player must collect a set of 3 numbers that add up to exactly 15.\r\n                            </li>\r\n                            <li>\r\n                                By default, you go first and play against my Bot, which will never fail to get a draw.\r\n                            </li>\r\n                            <li>\r\n                                In the Settings you can adjust whether you go first or second.\r\n                            </li>\r\n                            <li>\r\n                                You can also adjust whether to show/hide commentary and move hints.\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n// MUI Icons\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    button: {\r\n        // border: 'solid red 1px',\r\n        width: '100%',\r\n        height: '100%',\r\n        fontSize: '0.8rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: '0.6rem'\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n\r\n    switchLabel: {\r\n        lineHeight: '1rem'\r\n    },\r\n\r\n}));\r\n\r\nexport default function SettingsModal(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const openSettingsModal = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const showMovesSwitch = (\r\n        <Box className={classes.buttonBox}>\r\n            <Typography className={classes.switchLabel}>\r\n                Show Moves\r\n            </Typography>\r\n            <Switch\r\n                checked={props.showMoves}\r\n                onChange={props.toggleShowMovesSwitch}\r\n                color=\"primary\"\r\n                name=\"checkedB\"\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n        </Box>\r\n    );\r\n\r\n    const showCommentarySwitch = (\r\n        <Switch\r\n            checked={props.showCommentary}\r\n            onChange={props.toggleShowCommentarySwitch}\r\n            color=\"primary\"\r\n            name=\"checkedB\"\r\n            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={openSettingsModal}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n            >\r\n                <SettingsIcon \r\n                    className={classes.buttonIcon}\r\n                />\r\n                Settings\r\n            </Button>\r\n            \r\n            \r\n            <Dialog \r\n                open={open} \r\n                onClose={handleClose} \r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    Settings\r\n                </DialogTitle>\r\n                \r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                            To subscribe to this website, please enter your email address here. We will send updates\r\n                            occasionally.\r\n                    </DialogContentText>\r\n                    {showMovesSwitch}\r\n                    {showCommentarySwitch}\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button \r\n                        onClick={handleClose} \r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                    >\r\n                        Apply\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// Custom Components\r\nimport HelpModal from \"./HelpModal\";\r\nimport SettingsModal from \"./SettingsModal\";\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n\r\n\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    panel: {\r\n        boxSizing: 'border-box',\r\n        margin: '3vmin',\r\n        width: '68vmin',\r\n        height: '28vmin',\r\n        padding: '2vmin',\r\n        \r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        \r\n\r\n    },\r\n    infoArea: {\r\n        border: 'solid red 1px',\r\n        width: '70%',\r\n        fontSize: '2rem',\r\n        \r\n    },\r\n    buttonArea: {\r\n        // border: 'solid red 1px',\r\n        width: '30%',\r\n        display: 'flex',\r\n        flexDirection: 'column', \r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        padding: '1rem',\r\n    },\r\n    button: {\r\n        // border: 'solid red 1px',\r\n        width: '100%',\r\n        height: '20%',\r\n        fontSize: '0.8rem',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    buttonIcon: {\r\n        marginRight: '0.6rem'\r\n    },\r\n    \r\n    status: {\r\n        fontSize: '2.4rem',\r\n        fontWeight: 'bold'\r\n    },\r\n    commentary: {\r\n        fontSize: '1.2rem',\r\n    },\r\n}));\r\n\r\nexport default function Panel(props) {\r\n    const classes = useStyles();\r\n\r\n    \r\n    let status = props.status;\r\n    \r\n    const undoButton = (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => props.handleUndoButtonClick()}\r\n        >\r\n            <UndoIcon className={classes.buttonIcon} />\r\n            Undo\r\n        </Button>\r\n    );\r\n    const newGameButton = (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => props.handleNewGameButtonClick()}\r\n        >\r\n            New Game\r\n        </Button>\r\n\r\n\r\n    );\r\n    \r\n    const helpButton = (\r\n        <div className={classes.button} >\r\n            <HelpModal />\r\n        </div>\r\n            \r\n        \r\n    );\r\n\r\n    \r\n    const settingsButton = (\r\n        <div className={classes.button} >\r\n            <SettingsModal />\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <Paper className={classes.panel}>\r\n            <Box className={classes.infoArea}> \r\n                <Typography className={classes.status} noWrap >\r\n                    {status}\r\n                </Typography>\r\n                <Typography className={classes.commentary}  >\r\n                    Commentary would show up here if turned on.\r\n                </Typography>\r\n                \r\n                \r\n            </Box>\r\n            \r\n            \r\n            <Box className={classes.buttonArea}>\r\n                \r\n                {undoButton}\r\n                \r\n                {newGameButton}\r\n\r\n                {helpButton}\r\n                \r\n                {settingsButton}\r\n\r\n                {/* {showMovesSwitch} */}\r\n                \r\n                {/* {showCommentarySwitch} */}\r\n            </Box>\r\n                \r\n             \r\n        </Paper>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// My Components\r\nimport Board from \"./Board\";\r\nimport Panel from \"./Panel\";\r\n\r\n\r\n// MUI  components\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        // backgroundColor: '#4AC9FD'\r\n    },\r\n    boardArea: {\r\n        backgroundColor: '#bbffff',\r\n        height: '50vmin',\r\n        width: 'calc(100% - 3vmin)',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    panelArea: {\r\n        // border: 'solid blue 1px',\r\n        // backgroundColor: '#4AC9FD',\r\n        boxSizing: 'border-box',\r\n        width: '100%',\r\n        height: '32vmin',\r\n\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center'\r\n\r\n    },\r\n}));\r\n\r\n\r\nexport default function FifteenGame() {\r\n    const classes = useStyles();\r\n\r\n    let [history, setHistory] = useState(Array());\r\n    // let [showMoves, setShowMoves] = useState(false);\r\n    // let [showCommentary, setShowCommentary] = useState(false);\r\n\r\n    console.log(`FifteenGame has history as: ${history}`)\r\n    \r\n    return (\r\n        <div className={classes.root} >\r\n            <div className={classes.boardArea} >\r\n                <Board\r\n                    history={history}\r\n                    handleCardClick={handleCardClick}\r\n\r\n                />\r\n            </div>\r\n            <div className={classes.panelArea}>\r\n                <Panel\r\n                    // data={getPanelData(history)} \r\n                    // status={getStatus()}\r\n                    // showMoves={showMoves}\r\n                    // showCommentary={showCommentary}\r\n                    // handleUndoButtonClick={handleUndoButtonClick}\r\n                    // toggleShowMovesSwitch={toggleShowMovesSwitch}\r\n                    // toggleShowCommentarySwitch={toggleShowCommentarySwitch}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n    // The board data to render is a the latest entry in history.  We will have an 'undo' but not a 'redo' button\r\n    function getBoardValues() {\r\n        // Start with an array representing a board of NINE empty squares\r\n        let data = Array(9).fill('');\r\n        // For each move in the history ...\r\n        for (let i = 0; i < history.length; i++) {\r\n            // If it was X's turn set the index in data indicated here by history\r\n            if (i % 2 === 0) {\r\n                data.splice(history[i], 1, 'x')\r\n            }\r\n            // If it was O's turn set the index in data indicated here by history\r\n            else if (i % 2 === 1) {\r\n                data.splice(history[i], 1, 'o')\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n\r\n\r\n    // function handleUndoButtonClick() {\r\n    //     const shortenedHistory = history.slice(0, history.length - 1)\r\n    //     console.log(`${history[history.length - 1]} removed. Shortened history: ${shortenedHistory}`);\r\n    //     setHistory(shortenedHistory);\r\n    // }\r\n    // function toggleShowMovesSwitch() {\r\n    //     setShowMoves(!showMoves)\r\n    // }\r\n    // function toggleShowCommentarySwitch() {\r\n    //     setShowCommentary(!showCommentary)\r\n    // }\r\n\r\n\r\n    function handleCardClick(numberClicked) {\r\n        if (gameOver()) {\r\n            console.log(\"return without effects from handleCardClick(). The Game is already over.\")\r\n            return;\r\n        }\r\n        if (history.indexOf(numberClicked) !== -1) {\r\n            console.log(\"return without effects from handleCardClick(). That number has already been claimed.\")\r\n            return;\r\n        }\r\n        // If we reach this point the clicked square is open and the game is not over yet ... \r\n        setHistory(history.concat(numberClicked));\r\n        // This function does not pass along any of its results, it acts thru side-effects. It calls setHistory and use of that hook tells React it needs to re-render all components that depend on the state \"history\".\r\n    }\r\n\r\n\r\n    // Based on the history state, return an array of 8 ints 0-3 indicating the number of X's or O's in each row, col, and diagonal\r\n    // function xLines() {\r\n    //     const xLines = getLines(history.filter((squareId, index) => index % 2 === 0));\r\n    //     console.log(`Number of X in each line: ${xLines}`)\r\n    //     return xLines;\r\n    // }\r\n    // function oLines() {\r\n    //     const oLines = getLines(history.filter((squareId, index) => index % 2 === 1));\r\n    //     console.log(`Number of O in each line: ${oLines}`)\r\n    //     return oLines;\r\n    // }\r\n    // function getLines(claimedSquares) {\r\n    //     let status = Array(8).fill(0);\r\n    //     // For each square this player has claimed make 2, 3, or 4 updates\r\n    //     for (let i = 0; i < claimedSquares.length; i++) {\r\n    //         const squareId = claimedSquares[i];\r\n\r\n    //         // Update Row\r\n    //         const row = Math.floor(squareId / 3)    // number 0, 1, or 2\r\n    //         status[row]++;\r\n\r\n    //         // Update Col\r\n    //         const col = (squareId % 3)            // number 0, 1, or 2  +3 to account for the three indexes set asside for rows\r\n    //         status[col + 3]++;\r\n\r\n    //         // UpSlash ?\r\n    //         if (squareId === 2 || squareId === 4 || squareId === 6) {\r\n    //             status[6]++\r\n    //         }\r\n\r\n    //         // DownSlash ?\r\n    //         if (squareId === 0 || squareId === 4 || squareId === 8) {\r\n    //             status[7]++\r\n    //         }\r\n    //     }\r\n    //     // console.log(`Status: ${status}`)\r\n    //     return status;\r\n    // }\r\n\r\n\r\n    // BOOLEAN helpers for getStatus() and handleSquareClick()\r\n    // function xWins() {\r\n    //     return (xLines().includes(3));\r\n    // }\r\n    // function oWins() {\r\n    //     return (oLines().includes(3));\r\n    // }\r\n    // function gameDrawn() {\r\n    //     return (history.length >= 9 && !xWins() && !oWins());  // Board full and neither player has a win\r\n    // }\r\n    function gameOver() {\r\n        return false;\r\n        // return (history.length >= 9 || xWins() || oWins());  // Board full or there's a 3-in-a-row\r\n    }\r\n\r\n\r\n    // function getStatus() {\r\n    //     if (xWins()) {\r\n    //         const winningLine = getLines(history.filter((squareId, index) => index % 2 === 0)).indexOf(3);\r\n    //         return (`X wins on line ${winningLine}`)\r\n    //     }\r\n    //     else if (oWins()) {\r\n    //         return (`O wins!`)\r\n    //     }\r\n    //     else if (gameDrawn()) {\r\n    //         return (`Draw.`)\r\n    //     }\r\n    //     else if (history.length % 2 === 0) {\r\n    //         return (`X to move.`)\r\n    //     }\r\n    //     else if (history.length % 2 === 1) {\r\n    //         return (`O to move.`)\r\n    //     }\r\n    //     else {\r\n    //         console.error(\"getStatus() is broken!\");\r\n    //         return\r\n    //     }\r\n    // }\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\n// My Components\r\n\r\n\r\n// MUI  components\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n\r\n})\r\n\r\n\r\nexport default function MagicSquares() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            The Magic Squares Page\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// My Components\r\n\r\n\r\n// MUI  components\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles({\r\n\r\n})\r\n\r\n\r\nexport default function StrategyPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            The Strategy Page\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Link as RouterLink,\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\n\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\n// My Components & Pages\r\nimport Navbar from './components/Navbar';\r\nimport WelcomePage from \"./components/WelcomePage\";\r\nimport TicTacToeGame from './TicTacToe/TicTacToeGame';\r\nimport FifteenGame from './FifteenGame/FifteenGame';\r\nimport MagicSquares from \"./MagicSquares/MagicSquares\";\r\nimport StrategyPage from \"./pages/StrategyPage\";\r\n\r\n// MUI  components\r\n// import Link from '@material-ui/core/Link';\r\nimport Box from '@material-ui/core/Box';\r\n// import Button from '@material-ui/core/Button';\r\n// import Menu from '@material-ui/core/Menu';\r\n// import MenuItem from '@material-ui/core/MenuItem';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n// import AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nlet availHeight = window.screen.availHeight;\r\nlet availWidth = window.screen.availWidth;\r\n\r\n// let containerHeight;\r\n// let containerWidth;\r\n\r\n// if (availHeight * 3 / 4 < availWidth) {\r\n//     containerHeight = '100vh';\r\n//     containerWidth = '75vh';\r\n// } else if (availHeight * 3 / 4 > availWidth) {\r\n//     console.log(`orientation === \"portrait\"`);\r\n//     containerWidth = availWidth;\r\n//     containerHeight = availWidth * 4 / 3;\r\n// } else {\r\n//     console.log(\"The availHeight and availWidth API isn't supported in this browser :(\");\r\n// }\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: '100vh',\r\n        width: '100vw',\r\n        // boxSizing: 'border-box',\r\n        backgroundColor: '#ccFFFF',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n\r\n    },\r\n    container: {\r\n        backgroundColor: '#4AC9FD',\r\n        height: 'min(133vw, 100vh)',\r\n        maxHeight: '1200px',\r\n        width: 'min(75vh, 100vw)',\r\n        maxWidth: '900px',\r\n        // height: containerHeight,\r\n        // width: containerWidth,\r\n        borderRadius: '2vmin',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    footer: {\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n        height: '5%',\r\n        width: '100%',\r\n        alignItems: 'bottom',\r\n    },\r\n    footerText: {\r\n        paddingTop: '0.7vmin',\r\n        paddingRight: '2.5vmin',\r\n        color: 'navy',\r\n        fontSize: '1.6vmin'\r\n    },\r\n    // title: {\r\n    //     flexGrow: '1',\r\n    //     marginLeft: '1rem',\r\n    // },\r\n    \r\n    \r\n})\r\n\r\n\r\nexport default function App() {\r\n    const classes = useStyles();\r\n    // const [pageTitle, setPageTitle] = React.useState(\"Welcome\");\r\n    \r\n    const [pageTitle, setPageTitle] = React.useState(\"Welcome\");\r\n  \r\n    // Similar to componentDidMount and componentDidUpdate:\r\n    React.useEffect(() => {\r\n        // Update the document title using the browser API\r\n        // document.title = `You clicked ${count} times`;\r\n\r\n    });\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <div className={classes.container} >\r\n                <Router>\r\n                        <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Navbar pageTitle={\"Welcome\"} />\r\n                            <WelcomePage />\r\n                        </Route>\r\n\r\n                        <Route path=\"/tic-tac-toe\">\r\n                            <Navbar pageTitle={\"Play Tic Tac Toe\"} />\r\n                            <TicTacToeGame />\r\n                        </Route>\r\n\r\n                        <Route path=\"/fifteen-game\">\r\n                            <Navbar pageTitle={\"Play the Fifteen Game\"} />\r\n                            <FifteenGame />\r\n                        </Route>\r\n\r\n                        <Route path=\"/magic-squares\">\r\n                            <Navbar pageTitle={\"Learn about Magic Squares\"} />\r\n                            <MagicSquares />\r\n                        </Route>\r\n\r\n                        <Route path=\"/strategy\">\r\n                            <Navbar pageTitle={\"Learn Tic Tac Toe Strategy\"} />\r\n                            <StrategyPage />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Footer() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Box className={classes.footer} >\r\n            <Typography className={classes.footerText} noWrap >\r\n                Produced by the Nola Stem Garden\r\n            </Typography>\r\n        </Box>\r\n    );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n//   <React.StrictMode>\r\n    <App />,\r\n//   </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}